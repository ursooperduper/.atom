{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":23,"width":1440,"height":873,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/sarah/code/evermarks-test-data"],"buffers":[{"text":"require 'digest/md5'\nrequire 'evernote-thrift'\nrequire 'json'\n\nauth_token    = ENV['EN_DEV_TOKEN']\nnotebook_guid = ENV['EN_NOTEBOOK_GUID']\n\nnoteStoreUrl        = 'https://www.evernote.com/shard/s4/notestore'\nnoteStoreTransport  = Thrift::HTTPClientTransport.new(noteStoreUrl)\nnoteStoreProtocol   = Thrift::BinaryProtocol.new(noteStoreTransport)\nnoteStore           = Evernote::EDAM::NoteStore::NoteStore::Client.new(noteStoreProtocol)\n\nnotebook            = noteStore.getNotebook(auth_token, notebook_guid)\n\nfilter              = Evernote::EDAM::NoteStore::NoteFilter.new\nfilter.notebookGuid = notebook_guid\n\nnotes       = noteStore.findNotes(auth_token, filter, 0, 1000);\nnoteStash   = {}\n\nnoteStash['Notebook'] = {\n  'guid'        => notebook.guid,\n  'name'        => notebook.name,\n  'totalNotes'  => notes.totalNotes,\n  'created'     => notebook.serviceCreated,\n  'updated'     => notebook.serviceUpdated\n}\n\nnoteStash['Notes'] = []\n\nnotes.notes.each do |note|\n  content = noteStore.getNoteContent(auth_token, note.guid)\n  tagNames = noteStore.getNoteTagNames(auth_token, note.guid)\n\n  noteStash['Notes'].push({\n    'title'     => note.title,\n    'guid'      => note.guid,\n    'content'   => content.inspect,\n    'source'    => note.attributes.source,\n    'sourceURL' => note.attributes.sourceURL,\n    'created'   => note.created,\n    'updated'   => note.updated,\n    'tagNames'  => tagNames\n  })\nend\n\nresult = JSON.generate(noteStash)\nFile.write('bookmarks.json', result)\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":12},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/sarah/Dropbox/code/evermarks-test-data/get-bookmarks.rb","digestWhenLastPersisted":"cd5158b8ab4d4b12e2e50829ce99b6def4f4c3e2","preferredLineEnding":null,"deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":12,"softTabs":true,"displayBuffer":{"id":13,"softWrapped":true,"scrollTop":28,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/Dropbox/code/evermarks-test-data/get-bookmarks.rb","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/sarah/Dropbox/code/evermarks-test-data/get-bookmarks.rb","focused":true,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-ruby-on-rails","language-ruby","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"linter":{"scope":"File"},"fuzzy-finder":{"/Users/sarah/Dropbox/code/evermarks-test-data/get-bookmarks.rb":1444240081560},"metrics":{"sessionLength":648602},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/sarah/code/evermarks-test-data":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/sarah/code/evermarks-test-data/get-bookmarks.rb","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}