{"mode":"editor","version":1,"windowDimensions":{"x":1155,"y":23,"width":1261,"height":1358,"maximized":false},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/sarah/tidepool/tideline"],"buffers":[{"text":"var _ = require('lodash');\nvar d3 = window.d3;\n\nvar tideline = require('../../../js/index');\nvar bgBoundaryClass = tideline.plot.util.bgboundary;\nvar dt = tideline.data.util.datetime;\nvar format = tideline.data.util.format;\nvar tooltips = tideline.plot.util.tooltips.generalized;\nvar shapes = tideline.plot.util.tooltips.shapes;\n\nvar THREE_HRS = 10800000, NINE_HRS = 75600000;\n\nd3.chart('SMBGDay', {\n  initialize: function() {\n    var chart = this;\n\n    function getMsPer24(d) {\n      return dt.getMsPer24(d.normalTime, chart.timezone());\n    }\n\n    var xPositionGrouped = function(d) {\n      var msPer24 = getMsPer24(d);\n      var binSize = THREE_HRS;\n      var thresholds = {\n        0: binSize,\n        3: binSize * 2,\n        6: binSize * 3,\n        9: binSize * 4,\n        12: binSize * 5,\n        15: binSize * 6,\n        18: binSize * 7,\n        21: binSize * 8\n      };\n      for (var key in thresholds) {\n        var val = thresholds[key];\n        if (msPer24 < val) {\n          msPer24 = val;\n          return chart.xScale()(thresholds[key]-(THREE_HRS/2));\n        }\n      }\n    };\n\n    var xPosition = function(d) {\n      var msPer24 = getMsPer24(d);\n      return chart.xScale()(msPer24);\n    };\n\n    var yPosition = function(d) {\n      return chart.yScale()(d.value);\n    };\n\n    var tooltipHtml = function(foGroup, d) {\n      foGroup.append('p')\n        .append('span')\n        .attr('class', 'secondary')\n        .html(format.dayAndDate(d.normalTime, d.displayOffset));\n      foGroup.append('p')\n        .append('span')\n        .attr('class', 'secondary')\n        .html('<span class=\"fromto\">at</span> ' + format.timestamp(d.normalTime, d.displayOffset));\n      foGroup.append('p')\n        .attr('class', 'value')\n        .append('span')\n        .html(format.tooltipBG(d, chart.smbgOpts().units));\n    };\n\n    var tooltipOrientation = function(d) {\n      var cssClass = chart.getBgBoundaryClass(d);\n      var high = (cssClass.search('d3-bg-high') !== -1);\n      var msPer24 = getMsPer24(d);\n      var left = msPer24 <= THREE_HRS;\n      var right = msPer24 >= NINE_HRS;\n      if (high) {\n        if (left) {\n          return 'rightAndDown';\n        }\n        else {\n          return 'leftAndDown';\n        }\n      }\n      else {\n        if (right) {\n          return 'leftAndUp';\n        }\n        else {\n          return 'normal';\n        }\n      }\n    };\n\n    var createTooltip = function(d) {\n      chart.base.select('.smbgPath').attr('visibility', 'visible');\n      var day = chart.base.attr('class').replace('modalDay ', '');\n      var tooltip = tooltips.add(d, {\n        group: d3.select('#modalHighlightGroup'),\n        classes: ['svg-tooltip-smbg', day],\n        orientation: tooltipOrientation(d),\n        translation: 'translate(' + (chart.grouped() ? xPositionGrouped(d) : xPosition(d)) + ',' + yPosition(d) + ')'\n      });\n      tooltipHtml(tooltip.foGroup, d);\n      tooltip.anchor();\n      tooltip.makeShape();\n    };\n\n    var removeTooltip = function(d) {\n      chart.base.select('.smbgPath').attr('visibility', chart.showingLines() ? 'visible': 'hidden');\n      tooltips.remove(d);\n    };\n\n    this.layer('smbgInvisibleLines', this.base.append('g').attr('class', 'smbgInvisibleLines'), {\n      dataBind: function(data) {\n        var xFn = chart.grouped() ? xPositionGrouped : xPosition;\n        var pathData = [];\n        // only draw a line if there are at least three datapoints\n        if (data.length > 2) {\n          pathData = _.map(_.sortBy(data, function(d) { return d.normalTime; }), function(d) {\n            return [\n              xFn(d),\n              yPosition(d)\n            ];\n          });\n        }\n        return this.selectAll('path')\n          .data([pathData]);\n      },\n      insert: function() {\n        return this.append('path')\n          .attr({\n            fill: 'none',\n            'stroke-width': 8,\n            opacity: 0\n          });\n      },\n      events: {\n        merge: function() {\n          var line = d3.svg.line()\n            .x(function(d) { return d[0]; })\n            .y(function(d) { return d[1]; })\n            .interpolate('linear');\n          this.attr({\n            d: function(d) {\n              var byX = _.groupBy(d, function(p) { return p[0]; });\n              function reduceSameX(sum, num) {\n                return sum + num[1];\n              }\n              for (var key in byX) {\n                var haveSameX = byX[key].length;\n                if (haveSameX > 1) {\n                  var newPoint = [parseFloat(key)];\n                  newPoint.push(_.reduce(byX[key], reduceSameX, 0)/haveSameX);\n                  byX[key] = [newPoint];\n                }\n              }\n              d = _.map(Object.keys(byX), function(key) { return byX[key][0]; });\n              return line(d);\n            },\n            visibility: chart.showingLines() ? 'visible': 'hidden'\n          });\n        },\n        exit: function() {\n          this.remove();\n        }\n      }\n    });\n\n    this.layer('smbgLines', this.base.append('g').attr('class', 'smbgLines'), {\n      dataBind: function(data) {\n        var xFn = chart.grouped() ? xPositionGrouped : xPosition;\n        var pathData = [];\n        // only draw a line if there are at least three datapoints\n        if (data.length > 2) {\n          pathData = _.map(_.sortBy(data, function(d) { return d.normalTime; }), function(d) {\n            return [\n              xFn(d),\n              yPosition(d)\n            ];\n          });\n        }\n        return this.selectAll('path')\n          .data([pathData]);\n      },\n      insert: function() {\n        return this.append('path')\n          .attr({\n            'class': 'smbgPath',\n            'stroke-width': chart.smbgOpts().stroke\n          });\n      },\n      events: {\n        merge: function() {\n          var line = d3.svg.line()\n            .x(function(d) { return d[0]; })\n            .y(function(d) { return d[1]; })\n            .interpolate('linear');\n          this.attr({\n            d: function(d) {\n              var byX = _.groupBy(d, function(p) { return p[0]; });\n              function reduceSameX(sum, num) {\n                return sum + num[1];\n              }\n              for (var key in byX) {\n                var haveSameX = byX[key].length;\n                if (haveSameX > 1) {\n                  var newPoint = [parseFloat(key)];\n                  newPoint.push(_.reduce(byX[key], reduceSameX, 0)/haveSameX);\n                  byX[key] = [newPoint];\n                }\n              }\n              d = _.map(Object.keys(byX), function(key) { return byX[key][0]; });\n              return line(d);\n            },\n            visibility: chart.showingLines() ? 'visible': 'hidden'\n          });\n        },\n        exit: function() {\n          this.remove();\n        }\n      }\n    });\n\n    this.layer('smbgCircles', this.base.append('g').attr('class', 'smbgCircles'), {\n      dataBind: function(data) {\n        return this.selectAll('circle')\n          .data(data, function(d) { return d.id; });\n      },\n      insert: function() {\n        return this.append('circle')\n          .attr('class', 'smbgCircle');\n      },\n      events: {\n        enter: function() {\n          var grouped = chart.grouped();\n          this.attr({\n            cy: yPosition,\n            r: chart.smbgOpts().r\n          });\n        },\n        'merge:transition': function() {\n          this.attr({\n            cx: chart.grouped() ? xPositionGrouped : xPosition\n          });\n        },\n        merge: function() {\n          var grouped = chart.grouped();\n          this.on('mouseover', createTooltip)\n            .on('mouseout', removeTooltip);\n        },\n        exit: function() {\n          this.remove();\n        }\n      }\n    });\n  },\n  bgClasses: function(bgClasses) {\n    if (!arguments.length) { return this._bgClasses; }\n    this._bgClasses = bgClasses;\n    this.getBgBoundaryClass = bgBoundaryClass(bgClasses);\n    return this;\n  },\n  grouped: function(grouped) {\n    if (!arguments.length) { return this._grouped; }\n    this._grouped = grouped;\n    return this;\n  },\n  showingLines: function(showingLines) {\n    if (!arguments.length) { return this._showingLines; }\n    this._showingLines = showingLines;\n    return this;\n  },\n  smbgOpts: function(smbgOpts) {\n    if (!arguments.length) { return this._smbgOpts; }\n    this._smbgOpts = smbgOpts;\n    return this;\n  },\n  timezone: function(timezone) {\n    if (!arguments.length) { return this._timezone; }\n    this._timezone = timezone;\n    return this;\n  },\n  xScale: function(xScale) {\n    if (!arguments.length) { return this._xScale; }\n    this._xScale = xScale;\n    return this;\n  },\n  yScale: function(yScale) {\n    if (!arguments.length) { return this._yScale; }\n    this._yScale = yScale;\n    return this;\n  }\n});\n\nmodule.exports = function() {\n  var chart;\n\n  return {\n    create: function(el, scales, opts) {\n      opts = opts || {};\n      var defaults = {\n        classes: {\n          'very-low': {boundary: 60},\n          low: {boundary: 80},\n          target: {boundary: 180},\n          high: {boundary: 200},\n          'very-high': {boundary: 300}\n        },\n        smbg: {\n          r: 5,\n          stroke: 1,\n          units: 'mg/dL'\n        }\n      };\n      _.defaults(opts, defaults);\n\n      chart = d3.select(el)\n        .chart('SMBGDay')\n        .bgClasses(opts.classes)\n        .smbgOpts(opts.smbg)\n        .timezone(opts.timezone)\n        .xScale(scales.x)\n        .yScale(scales.y);\n\n      return this;\n    },\n    render: function(data, opts) {\n      opts = opts || {};\n      var defaults = {\n        grouped: false,\n        showingLines: true\n      };\n      _.defaults(opts, defaults);\n\n      chart.grouped(opts.grouped)\n        .showingLines(opts.showingLines)\n        .draw(data);\n\n      return this;\n    }\n  };\n};\n","markers":{"markers":{"1":{"id":1,"range":[[95,23],[95,30]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":537,"goalBufferRange":null},"deserializer":"Marker"},"233":{"id":233,"range":[[238,21],[238,21]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":619,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"},"236":{"id":236,"range":[[238,20],[238,21]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"237":{"id":237,"range":[[240,10],[240,11]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[129,28],[129,29]]},"newParams":{"tailed":false,"range":[[129,29],[129,29]]},"deserializer":"MarkerPatch"},{"oldRange":[[129,28],[129,29]],"newRange":[[129,28],[129,29]],"oldText":"8","newText":"2","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[129,29],[129,29]],"newRange":[[129,29],[129,30]],"oldText":"","newText":"0","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[129,28],[129,30]]},"newParams":{"tailed":false,"range":[[129,30],[129,30]]},"deserializer":"MarkerPatch"},{"oldRange":[[129,28],[129,30]],"newRange":[[129,28],[129,29]],"oldText":"20","newText":"8","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/sarah/tidepool/tideline/plugins/blip/modalday/SMBGDay.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"92c9360489237c3c0e23c870105869db34a47509","deserializer":"TextBuffer"},{"text":"var _ = require('lodash');\nvar d3 = window.d3;\n\nvar tideline = require('../../../js/index');\nvar dt = tideline.data.util.datetime;\n\nd3.chart('SMBGInfo', {\n  initialize: function() {\n    var chart = this;\n\n    var xPosition = function(d) {\n      var msPer24Pos = dt.getMsPer24(d.normalTime, chart.timezone());\n      return chart.xScale()(msPer24Pos);\n    };\n\n    var yPosition = function(d) {\n      return chart.yScale()(d.value);\n    };\n\n    this.layer('smbgInfo', this.base.append('g').attr('class', 'smbgInfo'), {\n      dataBind: function(data) {\n        return this.selectAll('g')\n          .data(data, function(d) { return d.id; });\n      },\n      insert: function() {\n        return this.append('g').attr('class', 'smbgInfoGroup');\n      },\n      events: {\n        enter: function() {\n          var opts = chart.opts().infoRects;\n          var toEnter = this;\n          toEnter.append('rect')\n            .attr({\n              x: function(d) {\n                return xPosition(d) - opts.width/2;\n              },\n              y: function(d) {\n                return yPosition(d) + opts.height/2;\n              },\n              width: opts.width,\n              height: opts.height\n            });\n\n          toEnter.append('text')\n            .attr({\n              x: xPosition,\n              y: function(d) {\n                return yPosition(d) + chart.opts().textShift.y;\n              }\n            })\n            .text(function(d) { return d.value; });\n        }\n      }\n    });\n  },\n  opts: function(opts) {\n    if (!arguments.length) { return this._opts; }\n    this._opts = opts;\n    return this;\n  },\n  timezone: function(timezone) {\n    if (!arguments.length) { return this._timezone; }\n    this._timezone = timezone;\n    return this;\n  },\n  xScale: function(xScale) {\n    if (!arguments.length) { return this._xScale; }\n    this._xScale = xScale;\n    return this;\n  },\n  yScale: function(yScale) {\n    if (!arguments.length) { return this._yScale; }\n    this._yScale = yScale;\n    return this;\n  }\n});\n\nvar chart;\n\nmodule.exports = {\n  create: function(el, scales, opts) {\n    opts = opts || {};\n    var defaults = {\n      opts: {\n        infoRects: {\n          height: 20,\n          width: 30\n        },\n        textShift: {\n          y: 25\n        }\n      }\n    };\n    _.defaults(opts, defaults);\n\n    chart = d3.select(el)\n      .chart('SMBGInfo')\n      .opts(opts.opts)\n      .timezone(opts.timezone)\n      .xScale(scales.x)\n      .yScale(scales.y);\n\n    return this;\n  },\n  render: function(data, opts) {\n    opts = opts || {};\n    var defaults = {};\n    _.defaults(opts, defaults);\n\n    chart.draw(data);\n\n    return this;\n  }\n};","markers":{"markers":{"1":{"id":1,"range":[[60,30],[60,30]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":569,"goalBufferRange":null},"deserializer":"Marker"},"4":{"id":4,"range":[[60,29],[60,30]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"5":{"id":5,"range":[[60,20],[60,21]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/sarah/tidepool/tideline/plugins/blip/modalday/SMBGInfo.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"f71152de82d7179faba867504e573f76db1c1bc1","deserializer":"TextBuffer"},{"text":"var _ = require('lodash');\nvar d3 = window.d3;\n\nvar tideline = require('../../../js/index');\nvar bgBoundaryClass = tideline.plot.util.bgboundary;\nvar dt = tideline.data.util.datetime;\nvar format = tideline.data.util.format;\nvar tooltips = tideline.plot.util.tooltips.generalized;\nvar shapes = tideline.plot.util.tooltips.shapes;\n\nd3.chart('SMBGRange')\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":602},"deserializer":"Marker"},"5":{"id":5,"range":[[10,0],[10,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"7":{"id":7,"range":[[10,20],[10,21]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/sarah/.Trash/SMBGRange.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"e9266c1affd311b32aed78abe45da7a7fd8eff2a","deserializer":"TextBuffer"},{"text":"/*\n * == BSD2 LICENSE ==\n * Copyright (c) 2014, Tidepool Project\n *\n * This program is free software; you can redistribute it and/or modify it under\n * the terms of the associated License, which is identical to the BSD 2-Clause\n * License as published by the Open Source Initiative at opensource.org.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the License for more details.\n *\n * You should have received a copy of the License along with this program; if\n * not, you can obtain one from Tidepool Project at tidepool.org.\n * == BSD2 LICENSE ==\n */\n\n.svg-tooltip-smbg.monday {\n  stroke: @monday;\n}\n.svg-tooltip-smbg.tuesday {\n  stroke: @tuesday;\n}\n.svg-tooltip-smbg.wednesday {\n  stroke: @wednesday;\n}\n.svg-tooltip-smbg.thursday {\n  stroke: @thursday;\n}\n.svg-tooltip-smbg.friday {\n  stroke: @friday;\n}\n.svg-tooltip-smbg.saturday {\n  stroke: @saturday;\n}\n.svg-tooltip-smbg.sunday {\n  stroke: @sunday;\n}\n\n.d3-axis.d3-left {\n  text {\n    text-anchor: end;\n    dominant-baseline: central;\n  }\n}\n\n.solid {\n  opacity: 1.0;\n}\n\n.modalDay {\n  circle {\n    opacity: 0.75;\n  }\n  .smbgPath {\n    fill: none;\n    opacity: 0.75;\n    stroke-dasharray: 4, 4;\n  }\n  rect {\n    fill: white;\n    opacity: 0.75;\n    pointer-events: none;\n  }\n  text {\n    text-anchor: middle;\n    fill: #727375;\n    font-size: 14px;\n    pointer-events: none;\n    &.smbgDayLabel {\n      text-anchor: start;\n      font-size: 16px;\n    }\n  }\n}\n.modalDay.highlight {\n  circle {\n    .solid;\n  }\n  .smbgPath {\n    .solid;\n    stroke-dasharray: none;\n  }\n}\n\n.monday {\n  circle {\n    fill: @monday;\n  }\n  path {\n    stroke: @monday;\n  }\n}\n.tuesday {\n  circle {\n    fill: @tuesday;\n  }\n  path {\n    stroke: @tuesday;\n  }\n}\n.wednesday {\n  circle {\n    fill: @wednesday;\n  }\n  path {\n    stroke: @wednesday;\n  }\n}\n.thursday {\n  circle {\n    fill: @thursday;\n  }\n  path {\n    stroke: @thursday;\n  }\n}\n.friday {\n  circle {\n    fill: @friday;\n  }\n  path {\n    stroke: @friday;\n  }\n}\n.saturday {\n  circle {\n    fill: @saturday;\n  }\n  path {\n    stroke: @saturday;\n  }\n}\n.sunday {\n  circle {\n    fill: @sunday;\n  }\n  path {\n    stroke: @sunday;\n  }\n}\n\n@brush: lighten(@background, 20%);\n\n#brushHandleGroup {\n  rect.background {\n    fill: none;\n    stroke: @brush;\n    stroke-width: 1.5;\n  }\n  rect.extent {\n    fill: @brush;\n    stroke: none;\n  }\n\n  text {\n    dominant-baseline: central;\n    fill: @brush;\n    font-size: 14px;\n    &.hidden {\n      visibility: hidden;\n    }\n    &.left {\n      text-anchor: end;\n    }\n    &.right {\n      text-anchor: start;\n    }\n  }\n}\n\n#brushTicks {\n  line {\n    stroke: @brush;\n  }\n}\n\n#brushAxisText {\n  text {\n    fill: @text;\n    font-size: 12px;\n    dominant-baseline: hanging;\n    &.centered {\n      text-anchor: middle;\n    }\n  }\n}\n\ncircle.meanCircle {\n  fill: none;\n  stroke: white;\n  stroke-width: 3px;\n}\nrect.rangeBox {\n  fill: @range;\n  opacity: 0.3;\n}\n","markers":{"markers":{"1":{"id":1,"range":[[196,1],[196,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":610,"autoscroll":true,"goalBufferRange":null},"deserializer":"Marker"},"23":{"id":23,"range":[[197,12],[197,12]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"49":{"id":49,"range":[[195,23],[195,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"90":{"id":90,"range":[[196,0],[196,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"91":{"id":91,"range":[[193,14],[193,15]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"92":{"id":92,"range":[[196,0],[196,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[196,1],[196,1]],"newRange":[[196,1],[197,0]],"oldText":"","newText":"\n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[197,0],[197,0]]},"newParams":{"range":[[196,1],[196,1]]},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/sarah/tidepool/tideline/css/tideline-modalday.less","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"a388b7ac2206530035462932c44e2b81eac86440","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"children":[{"id":3,"items":[{"id":537,"softTabs":true,"displayBuffer":{"id":538,"softWrapped":true,"editorWidthInChars":null,"scrollTop":1776,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/tidepool/tideline/plugins/blip/modalday/SMBGDay.js","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":610,"softTabs":true,"displayBuffer":{"id":611,"softWrapped":true,"editorWidthInChars":null,"scrollTop":3389,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/tidepool/tideline/css/tideline-modalday.less","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":602,"softTabs":true,"displayBuffer":{"id":603,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/.Trash/SMBGRange.js","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":569,"softTabs":true,"displayBuffer":{"id":570,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/tidepool/tideline/plugins/blip/modalday/SMBGInfo.js","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/sarah/tidepool/tideline/plugins/blip/modalday/SMBGDay.js","focused":false,"deserializer":"Pane"},{"id":622,"items":[{"id":619,"softTabs":true,"displayBuffer":{"id":618,"softWrapped":true,"editorWidthInChars":null,"scrollTop":5040,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/tidepool/tideline/plugins/blip/modalday/SMBGDay.js","tabLength":2,"invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/sarah/tidepool/tideline/plugins/blip/modalday/SMBGDay.js","focused":true,"deserializer":"Pane"}],"orientation":"vertical","deserializer":"PaneAxis"},"activePaneId":622,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-javascript","language-less","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["tidelineYAxes",".axis","180","40","trend","ticks","guidelines","14 days in view","days in view","modalBackgroundRects","poolBG_fill","poolBG","addPlotType","fill","faded","plotFunction","fill","addPlotType","endPoints","yScale","fill","endpoints","tooltip","rangeBox","createTooltip"],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"/Users/sarah/tidepool/tideline/plugins/blip/modalday/SMBGDay.js":1422636511057,"/Users/sarah/tidepool/tideline/css/tideline-modalday.less":1422636136479,"/Users/sarah/.Trash/SMBGRange.js":1422635675674,"/Users/sarah/tidepool/tideline/plugins/blip/modalday/SMBGInfo.js":1422635207430},"keybinding-resolver":{},"metrics":{"sessionLength":2390651},"tree-view":{"directoryExpansionStates":{"css":{},"plugins":{"blip":{"modalday":{}}}},"selectedPath":"/Users/sarah/tidepool/tideline/plugins/blip/modalday/SMBGDay.js","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}