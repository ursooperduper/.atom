{"mode":"editor","version":1,"windowDimensions":{"x":448,"y":75,"width":1356,"height":1328},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/sarah/Dropbox/code/markdown_to_sql","buffers":[{"text":"#!/usr/bin/env ruby\n\nif ARGV.length < 2\n  puts \"\\n\\nUsage: ./markdown_to_sql.rb <input_file> <output_file>\\n\\n\"\n\n  puts \"Description: This script will take a data dictionary markdown file and \"\\\n       \"convert it to a SQL file.\\n\\n\"\n\n  puts \"The data dictionary must be in the following format:\\n\\n\"\n\n  puts \"# Database Definition\\n\"\\\n       \"##artists\\n\"\\\n       \"Name\\t\\t| Type\\t\\t| Example\\n\"\\\n       \"----\\t\\t| ----\\t\\t| -------\\n\"\\\n       \"id\\t\\t| SERIAL PRIMARY KEY\\t\\t| 1\"\\\n       \"name\\t\\t| TEXT NOT NULL DEFAULT \\\"unknown\\\" \"\\\n       \"...\\n\\n\"\n  puts \"Your data dictionary markdown table could include examples and \"\\\n       \"other columnar data, and this script will happily ignore it.\\n\\n\"\n\nelse\n  md_file = File.new(ARGV[0], \"r\").readlines << \"\\n\"\n\n  columns = []\n  output = \"\"\n  prim = \"\"\n\n  md_file.each do |line|\n  tbl_name = line.match(/##([a-z_]+)$/)\n  col_name = line.match(/^([a-z_]+)\\s+\\|\\s([a-zA-Z0-9 \"'.\\(\\)]+)/)\n  end_table = line.match(/^\\n$/)\n  p_key = line.match(/^(PRIMARY KEY \\([a-z_, ]+\\))$/)\n\n  if tbl_name\n    tbl = \"CREATE TABLE #{tbl_name[1]} (\\n\"\n    output << tbl\n  end\n\n  if col_name\n    col = \"#{col_name[1]} #{col_name[2]}\"\n    columns << \"\\t#{col.rstrip}\"\n  end\n\n  if p_key\n    prim = \",\\n\\t#{p_key}\"\n  end\n\n  if end_table\n    if !columns.empty?\n      cols = columns.join(\",\\n\")\n      end_line = \"\\n);\\n\\n\"\n      output << cols << prim << end_line\n      columns.clear\n    end\n  end\n\n  end\n\n  sql_file = File.new(ARGV[1], \"w+\")\n  sql_file.puts output\n  sql_file.close\nend\n","markers":{"markers":{"1":{"id":1,"range":[[7,0],[7,0]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":17,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"reversed":false,"range":[[3,61],[3,61]]},"newParams":{"reversed":true,"range":[[3,60],[3,61]]},"deserializer":"MarkerPatch"},{"oldRange":[[3,60],[3,61]],"newRange":[[3,60],[3,60]],"oldText":" ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[3,60],[3,60]],"newRange":[[3,60],[3,61]],"oldText":"","newText":"_","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sarah/Dropbox/code/markdown_to_sql/markdown_to_sql.rb","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"f944b0db5fe79a366e354921af5e42291ef29388","deserializer":"TextBuffer"},{"text":"#markdown_to_sql\n\n##Description\nTakes data from a markdown-formatted data dictionary convert it to a SQL file, ready for Postgres.\n\n##Usage\n: ./markdown_to_sql.rb input_file output_file\n\n##Sample Data Dictionary Example\n\n-\n\n##artists\nName                    | Type                                                | Example\n----                    | ----                                                | -------\nid                      | SERIAL PRIMARY KEY                                  | 1\nname                    | TEXT NOT NULL DEFAULT \"unknown\"                     | Blue Rodeo\nofficial_site           | TEXT                                                | bluerodeo.com\ntwitter                 | TEXT                                                | bluerodeo\n","markers":{"markers":{"1":{"id":1,"range":[[10,0],[10,0]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":21,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"id":1,"oldParams":{"reversed":false,"range":[[10,0],[10,0]]},"newParams":{"reversed":true,"range":[[9,0],[10,0]]},"deserializer":"MarkerPatch"},{"oldRange":[[9,0],[10,0]],"newRange":[[9,0],[9,0]],"oldText":"\n","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[9,0],[9,0]],"newRange":[[9,0],[9,1]],"oldText":"","newText":"-","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[9,1],[9,1]],"newRange":[[9,1],[9,2]],"oldText":"","newText":"-","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[9,2],[9,2]]},"newParams":{"range":[[9,1],[9,2]]},"deserializer":"MarkerPatch"},{"oldRange":[[9,1],[9,2]],"newRange":[[9,1],[9,1]],"oldText":"-","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[9,1],[9,1]],"newRange":[[9,1],[10,0]],"oldText":"","newText":"\n","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[10,0],[10,0]],"newRange":[[10,0],[10,0]],"oldText":"","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[9,0],[9,0]],"newRange":[[9,0],[10,0]],"oldText":"","newText":"\n","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[10,0],[10,0]],"newRange":[[10,0],[10,0]],"oldText":"","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sarah/Dropbox/code/markdown_to_sql/README.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"8c78ef206c03cb8608bdcd5c17c65060ab915e16","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":12,"items":[{"deserializer":"MarkdownPreviewView","filePath":"/Users/sarah/Dropbox/code/markdown_to_sql/README.md","editorId":"8"},{"id":17,"softTabs":true,"displayBuffer":{"id":18,"softWrap":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/Dropbox/code/markdown_to_sql/markdown_to_sql.rb","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":21,"softTabs":true,"displayBuffer":{"id":22,"softWrap":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/Dropbox/code/markdown_to_sql/README.md","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/sarah/Dropbox/code/markdown_to_sql/markdown_to_sql.rb","focused":true,"deserializer":"Pane"},"activePaneId":12,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-ruby","language-gfm"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/sarah/Dropbox/code/markdown_to_sql/markdown_to_sql.rb":1407810406719,"/Users/sarah/Dropbox/code/markdown_to_sql/README.md":1407810406181},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":296188},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/sarah/Dropbox/code/markdown_to_sql/markdown_to_sql.rb","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}