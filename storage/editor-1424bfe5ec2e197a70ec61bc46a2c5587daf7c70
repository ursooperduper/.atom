{"mode":"editor","version":1,"windowDimensions":{"x":1282,"y":23,"width":1278,"height":1417,"maximized":false},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/sarah/tidepool/chrome-uploader"],"buffers":[{"text":"/**\n* Copyright (c) 2014, Tidepool Project\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the associated License, which is identical to the BSD 2-Clause\n* License as published by the Open Source Initiative at opensource.org.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the License for more details.\n*\n* You should have received a copy of the License along with this program; if\n* not, you can obtain one from Tidepool Project at tidepool.org.\n*/\n\n// \"Flexbox and border-box all the things\"\n// https://github.com/facebook/css-layout#default-values\n\n.box-flex {\n  box-sizing: border-box;\n  position: relative;\n  border: 0 solid black;\n  margin: 0;\n  padding: 0;\n\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  flex-shrink: 0;\n}\n","markers":{"markers":{"1":{"id":1,"range":[[27,17],[27,17]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":1169,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/sarah/tidepool/chrome-uploader/styles/core/mixins.less","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"5d4c264a6cb2371c7a368b53d3f804484a6f3400","deserializer":"TextBuffer"},{"text":".DeviceSelection {\n  min-height: 300px;\n  justify-content: center;\n}\n\n.DeviceSelection-headline {\n  width: 250px;\n  margin: 20px auto 30px auto;\n}\n\n.DeviceSelection-form {\n  .box-flex();\n  margin: 0px auto;\n}\n\n.Device-checkbox {\n  flex-flow: row wrap;\n  align-items: center;\n\n  & > input[type=\"checkbox\"] {\n    margin: 0;\n    margin-right: 5px;\n  }\n\n  margin-left: 15px;\n  margin-bottom: 30px;\n}\n\n.DeviceSelection-button {\n  width: 150px;\n  margin: 0px auto 5px auto;\n}","markers":{"markers":{"1":{"id":1,"range":[[30,16],[30,16]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":1197,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/sarah/tidepool/chrome-uploader/styles/components/DeviceSelection.less","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"c70c02cf00ae7871fa2bd981dab65879d0cda35b","deserializer":"TextBuffer"},{"text":"/**\n* Copyright (c) 2014, Tidepool Project\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the associated License, which is identical to the BSD 2-Clause\n* License as published by the Open Source Initiative at opensource.org.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the License for more details.\n*\n* You should have received a copy of the License along with this program; if\n* not, you can obtain one from Tidepool Project at tidepool.org.\n*/\n\n@btn-border-size: 2px;\n@btn-height: (30px + 2*@btn-border-size);\n\n// Base button\n// ====================================\n\n.btn,\na.btn {\n  display: inline-block;\n  margin: 0;\n  text-align: center;\n  vertical-align: middle;\n  cursor: pointer;\n  white-space: nowrap;\n  background-image: none;\n  text-decoration: none;\n\n  border: @btn-border-size solid transparent;\n  border-radius: 3px;\n\n  font-size: inherit;\n  line-height: (@btn-height - 2*@btn-border-size);\n  padding: 0 20px;\n\n  &:hover,\n  &:focus,\n  &:active {\n    outline: 0;\n    text-decoration: none;\n  }\n\n  &.disabled,\n  &[disabled],\n  fieldset[disabled] & {\n    cursor: not-allowed;\n    pointer-events: none; // Future-proof disabling of clicks\n    opacity: .65;\n  }\n}\n\n// Button styles\n// ====================================\n\n// Main action button style\n.btn-primary,\na.btn-primary {\n  background-color: #291647;\n  color: #fff;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: @purple-light;\n  }\n\n  &.disabled,\n  &[disabled],\n  fieldset[disabled] & {\n    background-color: fade(@purple-light, 30%);\n  }\n}\n\n.btn-secondary,\na.btn-secondary {\n  color: @text-color;\n  background-color: #fff;\n  border-color: fade(@purple-light, 50%);\n\n  &:hover,\n  &:focus,\n  &:active {\n    border-color: @purple-light;\n  }\n}\n\n.btn-tertiary,\na.btn-tertiary {\n  color: @text-color;\n  background-color: #fff;\n  border-color: fade(@red, 50%);\n\n  &:hover,\n  &:focus,\n  &:active {\n    border-color: @red;\n  }\n}\n","markers":{"markers":{"1":{"id":1,"range":[[61,27],[61,27]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":1201,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/sarah/tidepool/chrome-uploader/styles/core/buttons.less","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ca49cbd06c1ddb72d382c8af1eae6d21b6236421","deserializer":"TextBuffer"},{"text":"/*\n* == BSD2 LICENSE ==\n* Copyright (c) 2014, Tidepool Project\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the associated License, which is identical to the BSD 2-Clause\n* License as published by the Open Source Initiative at opensource.org.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the License for more details.\n*\n* You should have received a copy of the License along with this program; if\n* not, you can obtain one from Tidepool Project at tidepool.org.\n* == BSD2 LICENSE ==\n*/\n\nvar _ = require('lodash');\nvar React = require('react');\nvar Upload = require('./Upload.jsx');\n\nvar UploadList = React.createClass({\n  propTypes: {\n    uploads: React.PropTypes.array.isRequired,\n    targetedUploads: React.PropTypes.array.isRequired,\n    onUpload: React.PropTypes.func.isRequired,\n    onReset: React.PropTypes.func.isRequired,\n    readFile: React.PropTypes.func.isRequired\n  },\n\n  render: function() {\n    var self = this;\n    var nodes = _.map(this.props.targetedUploads, function(target){\n      var index = _.findIndex(self.props.uploads, function(upload) {\n        return upload.key === target.key;\n      });\n      return (\n        <div key={index} className=\"UploadList-item\">\n          <Upload\n            upload={target}\n            onUpload={self.props.onUpload.bind(null, index)}\n            onReset={self.props.onReset.bind(null, index)}\n            readFile={self.props.readFile.bind(null, index, self.props.targetId)} />\n        </div>\n      );\n    });\n\n    return <div className=\"UploadList\">{nodes}</div>;\n  }\n});\n\nmodule.exports = UploadList;\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":1205,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"},"8":{"id":8,"range":[[42,0],[42,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/sarah/tidepool/chrome-uploader/lib/components/UploadList.jsx","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"089097f8cd99e5b4e81752b13fc272bf191c9336","deserializer":"TextBuffer"},{"text":"/*\n* == BSD2 LICENSE ==\n* Copyright (c) 2014, Tidepool Project\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the associated License, which is identical to the BSD 2-Clause\n* License as published by the Open Source Initiative at opensource.org.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the License for more details.\n*\n* You should have received a copy of the License along with this program; if\n* not, you can obtain one from Tidepool Project at tidepool.org.\n* == BSD2 LICENSE ==\n*/\n\nvar _ = require('lodash');\nvar React = require('react');\n// This is \"cheating\" a bit, but need an easy way to format for this MVP :)\nvar moment = require('sundial/node_modules/moment');\nvar getIn = require('../core/getIn');\nvar deviceInfo = require('../core/deviceInfo');\nvar ProgressBar = require('./ProgressBar.jsx');\nvar LoadingBar = require('./LoadingBar.jsx');\n\nvar Upload = React.createClass({\n  propTypes: {\n    upload: React.PropTypes.object.isRequired,\n    onUpload: React.PropTypes.func.isRequired,\n    onReset: React.PropTypes.func.isRequired,\n    readFile: React.PropTypes.func.isRequired\n  },\n\n  getInitialState: function() {\n    return {\n      carelinkFormIncomplete: true,\n      blockModeFileNotChosen: true\n    };\n  },\n\n  render: function() {\n    return (\n      <div className=\"Upload\">\n        <div className=\"Upload-left\">\n          {this.renderName()}\n          {this.renderDetail()}\n          {this.renderLastUpload()}\n        </div>\n        <div className=\"Upload-right\">\n          <div className=\"Upload-statusSection\">\n            {this.renderStatus()}\n            {this.renderReset()}\n          </div>\n          {this.renderProgress()}\n          {this.renderActions()}\n        </div>\n      </div>\n    );\n  },\n\n  renderName: function() {\n    var name;\n    if (this.isCarelinkUpload()) {\n      name = 'Medtronic Devices';\n    }\n    else {\n      name = this.getDeviceName(this.props.upload);\n    }\n    return (\n      <div className=\"Upload-name\">{name}</div>\n    );\n  },\n\n  renderDetail: function() {\n    var detail;\n    if (this.isCarelinkUpload()) {\n      detail = 'Import from CareLink.<br>We will not store your credentials.';\n    }\n    else {\n      detail = this.getDeviceDetail(this.props.upload);\n    }\n    return (\n      <div className=\"Upload-detail\" dangerouslySetInnerHTML={{__html: detail}}></div>\n    );\n  },\n\n  renderActions: function() {\n    if (this.isUploading() || this.isUploadCompleted() || this.isDisconnected()) {\n      return null;\n    }\n\n    return (\n      <form className=\"Upload-form\">\n        {this.renderCarelinkInputs()}\n        {this.renderBlockModeInput()}\n        {this.renderButton()}\n      </form>\n    );\n  },\n\n  renderBlockModeInput: function() {\n    if (!this.isBlockModeDevice()) {\n      return null;\n    }\n\n    return (\n      <div className=\"Upload-inputWrapper\">\n        <input className=\"Upload-fileinput\" ref=\"file\" type=\"file\" onChange={this.onBlockModeInputChange}/>\n      </div>\n    );\n  },\n\n  onBlockModeInputChange: function(e) {\n    var file = e.target.files[0];\n    var fileResult = this.props.readFile(file, this.props.upload.source.extension);\n    this.setState({\n      blockModeFileNotChosen: fileResult === true ? false : true\n    });\n  },\n\n  renderCarelinkInputs: function() {\n    if (!this.isCarelinkUpload()) {\n      return null;\n    }\n\n    return (\n      <div>\n        <div className=\"Upload-input\"><input onChange={this.onCareLinkInputChange} className=\"form-control\" ref=\"username\" placeholder=\"CareLink username\"/></div>\n        <div className=\"Upload-input\"><input onChange={this.onCareLinkInputChange} className=\"form-control\" ref=\"password\" type=\"password\" placeholder=\"CareLink password\"/></div>\n      </div>\n    );\n  },\n\n  onCareLinkInputChange: function() {\n    var username = this.refs.username && this.refs.username.getDOMNode().value;\n    var password = this.refs.password && this.refs.password.getDOMNode().value;\n\n    if (!username || !password) {\n      this.setState({carelinkFormIncomplete: true});\n    } else {\n      this.setState({carelinkFormIncomplete: false});\n    }\n  },\n\n  renderButton: function() {\n    var text = 'Upload';\n    var disabled = this.isDisabled();\n\n    if (this.isCarelinkUpload()) {\n      text = 'Import';\n      disabled = disabled || this.state.carelinkFormIncomplete;\n    }\n    if (this.isBlockModeDevice()) {\n      disabled = disabled || this.state.blockModeFileNotChosen;\n    }\n\n    return (\n      <div className=\"Upload-button\">\n        <button\n          className=\"btn btn-primary\"\n          disabled={disabled}\n          onClick={this.handleUpload}>{text}</button>\n      </div>\n    );\n  },\n\n  renderProgress: function() {\n    if (this.isUploadFailed()) {\n      return <div className=\"Upload-progress\"></div>;\n    }\n\n    if (this.isFetchingCarelinkData()) {\n      return <div className=\"Upload-progress\"><LoadingBar/></div>;\n    }\n\n    var percentage =\n      this.props.upload.progress && this.props.upload.progress.percentage;\n\n    // Can be equal to 0, so check for null or undefined\n    if (percentage == null) {\n      return null;\n    }\n\n    return <div className=\"Upload-progress\"><ProgressBar percentage={percentage}/></div>;\n  },\n\n  renderStatus: function() {\n    if (this.isDisconnected()) {\n      return (\n        <div className=\"Upload-status Upload-status--disconnected\">\n          {'Connect your ' + this.getDeviceName(this.props.upload) + '...'}\n        </div>\n      );\n    }\n    if (this.isFetchingCarelinkData()) {\n      return <div className=\"Upload-status Upload-status--uploading\">{'Downloading CareLink export...'}</div>;\n    }\n    if (this.isUploading()) {\n      return <div className=\"Upload-status Upload-status--uploading\">{'Uploading... ' + this.props.upload.progress.percentage + '%'}</div>;\n    }\n    if (this.isUploadSuccessful()) {\n      return <div className=\"Upload-status Upload-status--success\">{'Done!'}</div>;\n    }\n    if (this.isUploadFailed()) {\n      var uploadError = this.getUploadError();\n\n      if (getIn(uploadError, ['error', 'code']) && getIn(uploadError, ['error', 'message'])) {\n          return <div className=\"Upload-status Upload-status--error\">{uploadError.error.message}</div>;\n      }\n\n      if (uploadError.code && uploadError.code === 404) {\n        return <div className=\"Upload-status Upload-status--error\">{uploadError.message}</div>;\n      }\n\n      return <div className=\"Upload-status Upload-status--error\">{'The upload didn\\'t work.'}</div>;\n    }\n    if (this.isBlockModeFileChosen()) {\n      return <div className=\"Upload-status Upload-status--uploading\">{this.props.upload.file.name}</div>;\n    }\n\n    return null;\n  },\n\n  renderReset: function() {\n    if (!this.isUploadCompleted()) {\n      return null;\n    }\n\n    var text = this.isUploadSuccessful() ? 'OK' : 'Try again';\n    var classes = 'Upload-reset';\n    if (this.isUploadFailed()) {\n      text = 'Try again';\n      classes = classes + ' Upload-reset--error';\n    }\n    else {\n      classes = classes + ' Upload-reset--success';\n    }\n\n    return (\n      <div className={classes}>\n        <a href=\"\" onClick={this.handleReset}>{text}</a>\n      </div>\n    );\n  },\n\n  renderLastUpload: function() {\n    var lastUpload = this.getLastUpload();\n    if (!lastUpload) {\n      return null;\n    }\n    var time = moment(lastUpload.finish).calendar();\n    return <div className=\"Upload-detail\">{'Last upload: ' + time}</div>;\n  },\n\n  getLastUpload: function() {\n    var history = this.props.upload.history;\n    if (!(history && history.length)) {\n      return null;\n    }\n    return history[0];\n  },\n\n  getDeviceName: function(upload) {\n    var getName = getIn(\n      deviceInfo,\n      [upload.source.driverId, 'getName'],\n      function() { return 'Unknown device'; }\n    );\n    return getName(upload.source);\n  },\n\n  getDeviceDetail: function(upload) {\n    var getDetail = getIn(\n      deviceInfo,\n      [upload.source.driverId, 'getDetail'],\n      function() { return ''; }\n    );\n    return getDetail(upload.source);\n  },\n\n  getUploadError: function() {\n    return this.props.upload.error;\n  },\n\n  isDisabled: function() {\n    return this.props.upload.disabled;\n  },\n\n  isDisconnected: function() {\n    return this.props.upload.disconnected;\n  },\n\n  isUploading: function() {\n    return this.props.upload.uploading;\n  },\n\n  isBlockModeDevice: function() {\n    return this.props.upload.source.type === 'block';\n  },\n\n  isBlockModeFileChosen: function() {\n    if (this.state.blockModeFileNotChosen) {\n      return false;\n    }\n    else {\n      if (this.props.upload.source.type === 'block') {\n        return this.props.upload.file && !_.isEmpty(this.props.upload.file.name);\n      }\n    }\n  },\n\n  isCarelinkUpload: function() {\n    return this.props.upload.carelink;\n  },\n\n  isFetchingCarelinkData: function() {\n    return this.props.upload.fetchingCarelinkData;\n  },\n\n  isUploadSuccessful: function() {\n    return this.props.upload.successful;\n  },\n\n  isUploadFailed: function() {\n    return this.props.upload.failed;\n  },\n\n  isUploadCompleted: function() {\n    return this.props.upload.completed;\n  },\n\n  handleUpload: function(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (this.isCarelinkUpload()) {\n      return this.handleCarelinkUpload();\n    }\n    else if (this.isBlockModeDevice()) {\n      return this.handleBlockModeUpload();\n    }\n\n    var options = {};\n    this.props.onUpload(options);\n  },\n\n  handleCarelinkUpload: function() {\n    var username = this.refs.username.getDOMNode().value;\n    var password = this.refs.password.getDOMNode().value;\n    var options = {\n      username: username,\n      password: password\n    };\n    this.props.onUpload(options);\n  },\n\n  handleBlockModeUpload: function() {\n    var options = {\n      filename: this.props.upload.file.name,\n      filedata: this.props.upload.file.data\n    };\n    this.props.onUpload(options);\n    this.setState({\n      blockModeFileNotChosen: true\n    });\n  },\n\n  handleReset: function(e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    this.props.onReset();\n  }\n});\n\nmodule.exports = Upload;\n","markers":{"markers":{"1":{"id":1,"range":[[160,36],[160,36]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":1209,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"},"22":{"id":22,"range":[[48,0],[48,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/sarah/tidepool/chrome-uploader/lib/components/Upload.jsx","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"fba8b32aa31ddb5d1f82a31651308dc98e12bdbe","deserializer":"TextBuffer"},{"text":"/**\n* Copyright (c) 2014, Tidepool Project\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the associated License, which is identical to the BSD 2-Clause\n* License as published by the Open Source Initiative at opensource.org.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the License for more details.\n*\n* You should have received a copy of the License along with this program; if\n* not, you can obtain one from Tidepool Project at tidepool.org.\n*/\n\n.ViewData-button,\na.ViewData-button {\n  font-size: @font-size-large;\n  padding: 5px 0px;\n  width: 150px;\n  margin: 10px auto;\n}\n","markers":{"markers":{"1":{"id":1,"range":[[18,2],[18,2]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":1245,"autoscroll":true,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[{"patches":[{"oldRange":[[21,16],[21,17]],"newRange":[[21,16],[21,16]],"oldText":";","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,15],[21,16]],"newRange":[[21,15],[21,15]],"oldText":"o","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,14],[21,15]],"newRange":[[21,14],[21,14]],"oldText":"t","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,13],[21,14]],"newRange":[[21,13],[21,13]],"oldText":"u","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,12],[21,13]],"newRange":[[21,12],[21,12]],"oldText":"a","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,11],[21,12]],"newRange":[[21,11],[21,11]],"oldText":" ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,10],[21,11]],"newRange":[[21,10],[21,10]],"oldText":"0","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,9],[21,10]],"newRange":[[21,9],[21,9]],"oldText":" ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,8],[21,9]],"newRange":[[21,8],[21,8]],"oldText":":","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,7],[21,8]],"newRange":[[21,7],[21,7]],"oldText":"n","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,6],[21,7]],"newRange":[[21,6],[21,6]],"oldText":"i","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,5],[21,6]],"newRange":[[21,5],[21,5]],"oldText":"g","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,4],[21,5]],"newRange":[[21,4],[21,4]],"oldText":"r","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,3],[21,4]],"newRange":[[21,3],[21,3]],"oldText":"a","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[21,2],[21,3]],"newRange":[[21,2],[21,2]],"oldText":"m","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[21,0],[21,2]],"newRange":[[21,0],[21,0]],"oldText":"  ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[20,22],[21,0]],"newRange":[[20,22],[20,22]],"oldText":"\n","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[20,3],[20,4]],"newRange":[[20,3],[20,3]],"oldText":"/","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[20,2],[20,3]],"newRange":[[20,2],[20,2]],"oldText":"/","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[18,3],[18,4]],"newRange":[[18,3],[18,3]],"oldText":"/","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[18,2],[18,3]],"newRange":[[18,2],[18,2]],"oldText":"/","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/sarah/tidepool/chrome-uploader/styles/components/ViewDataLink.less","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"a882ddaadc811b424b9e77d8fa104fe4fb28a381","deserializer":"TextBuffer"},{"text":"/**\n* Copyright (c) 2014, Tidepool Project\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the associated License, which is identical to the BSD 2-Clause\n* License as published by the Open Source Initiative at opensource.org.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the License for more details.\n*\n* You should have received a copy of the License along with this program; if\n* not, you can obtain one from Tidepool Project at tidepool.org.\n*/\n\n// it's not very clear that content is scrollable\n// so make sure a scrollbar always displays\n::-webkit-scrollbar {\n  -webkit-appearance: none;\n}\n::-webkit-scrollbar:vertical {\n  width: 10px;\n}\n::-webkit-scrollbar-track {\n  background-color: rgba(255,255,255,0.25);\n  border-radius: 5px;\n}\n::-webkit-scrollbar-thumb {\n  border-radius: 5px;\n  background-color: rgba(0,0,0,0.15);\n}\n\n.UploadList {\n  padding-top: 20px;\n  // room for scrollbar so it doesn't overlap content\n  padding-right: 15px;\n  min-height: 370px;\n  overflow-y: scroll;\n}\n\n.UploadList-item {\n  padding: 15px 0;\n  border-bottom: 1px solid @gray-light;\n}\n\n.UploadList-item:last-child {\n  padding-bottom: 20px;\n  border-bottom: 0;\n}\n","markers":{"markers":{"1":{"id":1,"range":[[36,16],[36,16]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":1249,"goalBufferRange":null,"skipAtomicTokens":true,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/sarah/tidepool/chrome-uploader/styles/components/UploadList.less","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"4392c7ec98548e65bdee6974910231196f013270","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":1084,"items":[{"id":1245,"softTabs":true,"displayBuffer":{"id":1246,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/tidepool/chrome-uploader/styles/components/ViewDataLink.less","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":1197,"softTabs":true,"displayBuffer":{"id":1198,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/tidepool/chrome-uploader/styles/components/DeviceSelection.less","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":1201,"softTabs":true,"displayBuffer":{"id":1202,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/tidepool/chrome-uploader/styles/core/buttons.less","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":1205,"softTabs":true,"displayBuffer":{"id":1206,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/tidepool/chrome-uploader/lib/components/UploadList.jsx","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":1249,"softTabs":true,"displayBuffer":{"id":1250,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/tidepool/chrome-uploader/styles/components/UploadList.less","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":1209,"softTabs":true,"displayBuffer":{"id":1210,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/tidepool/chrome-uploader/lib/components/Upload.jsx","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":1169,"softTabs":true,"displayBuffer":{"id":1170,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/tidepool/chrome-uploader/styles/core/mixins.less","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/sarah/tidepool/chrome-uploader/styles/components/ViewDataLink.less","focused":true,"deserializer":"Pane"},"activePaneId":1084,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-less","react","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["hideMenuDropdown","'login'","devel","setState","'main'","onGroupChange","changeGroup","\\brender\\b","onGroupChange","Manifest","device.js","'device.js'","manifest.json","manifest","lib/core/device.js","device.js","lib/core","lib/core/device","Manifest","manifest","lib/core/driver","lib/core/","ViewData-button","UploadList-item","ViewData-button"],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"/Users/sarah/tidepool/chrome-uploader/styles/components/ViewDataLink.less":1424362729972,"/Users/sarah/tidepool/chrome-uploader/styles/components/DeviceSelection.less":1424287977757,"/Users/sarah/tidepool/chrome-uploader/styles/core/buttons.less":1424287991732,"/Users/sarah/tidepool/chrome-uploader/lib/components/UploadList.jsx":1424290373423,"/Users/sarah/tidepool/chrome-uploader/styles/components/UploadList.less":1424290376795,"/Users/sarah/tidepool/chrome-uploader/lib/components/Upload.jsx":1424288058332,"/Users/sarah/tidepool/chrome-uploader/styles/core/mixins.less":1424285035042},"keybinding-resolver":{},"metrics":{"sessionLength":757174},"tree-view":{"directoryExpansionStates":{"styles":{"components":{},"core":{}}},"selectedPath":"/Users/sarah/tidepool/chrome-uploader","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":4,"width":270},"filetype-color":{}}}