{"mode":"editor","version":1,"windowDimensions":{"x":718,"y":23,"width":718,"height":877,"maximized":false},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/sarah/code/bots/picktwobot","buffers":[{"text":"{\n  \"name\": \"picktwobot\",\n  \"version\": \"1.0.0\",\n  \"description\": \"A Twitter bot that reminds you that you can't have everything.\",\n  \"main\": \"bot.js\",\n  \"scripts\": {\n    \"start\": \"node bot.js\"\n  },\n  \"dependencies\": {\n    \"async\": \"^0.9.0\",\n    \"lodash\": \"^2.4.1\",\n    \"node-rest-client\": \"^1.4.1\",\n    \"twit\": \"^1.1.18\",\n    \"wordfilter\": \"^0.1.7\"\n  }\n}\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":4,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sarah/Dropbox/code/bots/picktwobot/package.json","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"bee3475a201c18ee1abfb90c990aaf338e5b5800","deserializer":"TextBuffer"},{"text":"var _             = require('lodash');\nvar Client        = require('node-rest-client').Client;\nvar Twit          = require('twit');\nvar async         = require('async');\nvar wordFilter    = require('wordfilter');\n\nvar t = new Twit({\n  consumer_key:         process.env.PICKTWOBOT_TWIT_CONSUMER_KEY,\n  consumer_secret:      process.env.PICKTWOBOT_TWIT_CONSUMER_SECRET,\n  access_token:         process.env.PICKTWOBOT_TWIT_ACCESS_TOKEN,\n  access_token_secret:  process.env.PICKTWOBOT_TWIT_ACCESS_TOKEN_SECRET\n});\n\nvar wordnikKey =        process.env.WORDNIK_API_KEY;\n\ngetDummyTweet = function(cb) {\n  var botData = {\n    tweet         : 'You should probably keep an eye on that http://t.co/nbg6jDGUmN in the next hour...just saying...',\n    tweetID       : '142423423',\n    tweetUsername : 'testusername'\n  };\n  cb(null, botData);\n}\n\ngetPublicTweet = function(cb) {\n  t.get('search/tweets', {q: 'a', count: 1, result_type: 'recent', lang: 'en'}, function(err, data, response) {\n    if (!err) {\n      var botData = {\n        baseTweet       : data.statuses[0].text.toLowerCase(),\n        tweetID         : data.statuses[0].id_str,\n        tweetUsername   : data.statuses[0].user.screen_name\n      };\n      cb(null, botData);\n    } else {\n      console.log(\"There was an error getting a public Tweet. Abandoning EVERYTHING :(\");\n      cb(err, botData);\n    }\n  });\n};\n\nextractWordsFromTweet = function(botData, cb) {\n  var excludeNonAlpha       = /[^a-zA-Z]+/;\n  var excludeURLs           = /https?:\\/\\/[-a-zA-Z0-9@:%_\\+.~#?&\\/=]+/g;\n  var excludeShortAlpha     = /\\b[a-z][a-z]?\\b/g;\n  var excludeHandles        = /@[a-z0-9_-]+/g;\n  var excludePatterns       = [excludeURLs, excludeShortAlpha, excludeHandles];\n  botData.tweet             = botData.baseTweet;\n\n  _.each(excludePatterns, function(pat) {\n    botData.tweet = botData.tweet.replace(pat, ' ');\n  });\n\n  botData.tweetWordList = botData.tweet.split(excludeNonAlpha);\n  var excludedElements = [\n    'and','the','pick','select','picking'\n  ];\n  \n  botData.tweetWordList = _.reject(botData.tweetWordList, function(w) {\n    return _.contains(excludedElements, w);\n  });\n\n  cb(null, botData);\n};\n\ngetAllWordData = function(botData, cb) {\n  async.map(botData.tweetWordList, getWordData, function(err, results){\n    botData.wordList = results;\n    cb(err, botData);\n  }); \n}\n\ngetWordData = function(word, cb) {\n  var client = new Client();\n\n  var wordnikWordURLPart1   = 'http://api.wordnik.com:80/v4/word.json/';\n  var wordnikWordURLPart2   = '/definitions?limit=1&includeRelated=false&useCanonical=true&includeTags=false&api_key=';\n\n  var args = {\n    headers: {'Accept':'application/json'}\n  };\n\n  var wordnikURL = wordnikWordURLPart1 + word.toLowerCase() + wordnikWordURLPart2 + wordnikKey;\n\n  client.get(wordnikURL, args, function (data, response) {\n    if (response.statusCode === 200) {\n      var result = JSON.parse(data);\n      if (result.length) {\n        cb(null, result);\n      } else {\n        cb(null, null);\n      }\n    } else {\n      cb(null, null);\n    }\n  });\n};\n\nfindNouns = function(botData, cb) {\n  botData.nounList = [];\n  botData.wordList = _.compact(botData.wordList);\n  \n  _.each(botData.wordList, function(wordInfo) {\n    var word            = wordInfo[0].word;\n    var partOfSpeech    = wordInfo[0].partOfSpeech;\n\n    if (partOfSpeech == 'noun' || partOfSpeech == 'proper-noun') {\n      botData.nounList.push(word);\n    }\n  });\n\n  if (botData.nounList.length >= 3) {\n    cb(null, botData);\n  } else {\n    cb('There are fewer than 3 nouns.', botData);\n  }\n}\n\nformatTweet = function(botData, cb) {\n  botData.pickTwoWordList = [];\n  _.each(botData.nounList.slice(0,3), function(word) {\n    word = word.charAt(0).toUpperCase() + word.slice(1) + \".\";\n    botData.pickTwoWordList.push(word);\n  });\n\n  var tweetLine1    = botData.pickTwoWordList.join(' ');\n  var tweetLine2    = 'Pick Two.';\n  var tweetLine3    = 'http://twitter.com/' + botData.tweetUsername + '/status/' + botData.tweetID;\n  botData.tweetBlock = tweetLine1 + '\\n' + tweetLine2 + '\\n' + tweetLine3;\n  cb(null, botData);\n}\n\ndummyPost = function(botData, cb) {\n  console.log(\"Tweet: \", botData);\n}\n\npostTweet = function(botData, cb) {\n  if (!wordFilter.blacklisted(botData.tweetBlock)) {\n    t.post('statuses/update', {status: botData.tweetBlock}, function(err, data, response) {\n      cb(err, botData);\n    });\n  }\n}\n\nrun = function() {\n  async.waterfall([\n    getPublicTweet, \n    extractWordsFromTweet, \n    getAllWordData, \n    findNouns,\n    formatTweet,\n    postTweet\n  ],\n  function(err, botData) {\n    if (err) {\n      console.log('There was an error posting to Twitter: ', err);\n    } else {\n      console.log('Tweet successful!');  \n      console.log('Tweet: ', botData.tweetBlock);\n    }\n    console.log('Base tweet: ', botData.baseTweet);\n  });\n}\n\n\nsetInterval(function() {\n  try {\n    run();\n  }\n  catch (e) {\n    console.log(e);\n  }\n}, 60000 * 60);\n\n","markers":{"markers":{"1":{"id":1,"range":[[150,13],[150,13]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":14,"goalBufferRange":null},"deserializer":"Marker"},"10":{"id":10,"range":[[22,0],[22,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"11":{"id":11,"range":[[35,14],[35,23]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"12":{"id":12,"range":[[69,0],[69,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"13":{"id":13,"range":[[115,0],[115,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"14":{"id":14,"range":[[129,0],[129,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"15":{"id":15,"range":[[133,0],[133,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"16":{"id":16,"range":[[141,0],[141,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"17":{"id":17,"range":[[161,0],[161,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/sarah/Dropbox/code/bots/picktwobot/bot.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"15c49bbc0ed8707778110e51a133fcb63a9e58d4","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":4,"softTabs":true,"displayBuffer":{"id":5,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/Dropbox/code/bots/picktwobot/package.json","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":14,"softTabs":true,"displayBuffer":{"id":15,"softWrapped":true,"editorWidthInChars":null,"scrollTop":2531,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/Dropbox/code/bots/picktwobot/bot.js","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemUri":"/Users/sarah/Dropbox/code/bots/picktwobot/bot.js","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-json","language-javascript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/sarah/Dropbox/code/bots/picktwobot/package.json":1414461596144,"/Users/sarah/Dropbox/code/bots/picktwobot/bot.js":1414461599487},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":1368624},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/sarah/code/bots/picktwobot","hasFocus":false,"attached":false,"scrollLeft":0,"scrollTop":0,"width":200}}}