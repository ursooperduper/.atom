{"mode":"editor","version":1,"windowDimensions":{"x":4,"y":23,"width":1436,"height":877,"maximized":true},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"paths":["/Users/sarah/code/lewittscript"],"buffers":[{"text":"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>LeWittScript</title>\n\n    <link href=\"css/main.css\" rel=\"stylesheet\" />\n\n    <script src=\"modernizr.js\"></script>\n    <script src=\"lodash.min.js\"></script>\n    <script src=\"lewittscript.js\"></script>\n    <script src=\"parser.js\"></script>\n  </head>\n  <body>\n\n    <div class=\"container\">\n      <h1>LeWittScript</h1>\n\n      <div class=\"canvasDiv\">\n        <canvas id=\"canvas\" width=\"800\" height=\"450\">\n          Your browser doesn't support HTML5 Canvas. Bummer.\n        </canvas>\n      </div>\n\n      <h4>Instruction:</h4>\n      <div class=\"instruction-display\">\n\n        <input type=\"text\" name=\"input1\" id=\"input1\" class=\"instruction\">\n        <input type=\"text\" name=\"input2\" id=\"input2\" class=\"instruction\">\n        <a href=\"javascript: handleInput()\" class=\"insButton\">Make some art</a>\n\n      </div>\n    </div>\n  </body>\n</html>\n","markerStore":{"nextMarkerId":13,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":44,"preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"3":{"range":{"start":{"row":9,"column":0},"end":{"row":10,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"4":{"range":{"start":{"row":11,"column":0},"end":{"row":12,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"7":{"range":{"start":{"row":9,"column":0},"end":{"row":10,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"8":{"range":{"start":{"row":11,"column":0},"end":{"row":12,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"11":{"range":{"start":{"row":9,"column":0},"end":{"row":10,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"12":{"range":{"start":{"row":11,"column":0},"end":{"row":12,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false}},"version":2},"history":{"version":2,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/sarah/Dropbox/code/lewittscript/Experiments/index.html","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"e059d1ae399c85fc010dcb320fcaf353422eb021","deserializer":"TextBuffer","version":2},{"text":"var Debugger = function () { };\nDebugger.log = function(message) {\n  try {\n    console.log(message);\n  } catch (exception) {\n    return;\n  }\n};\n\nfunction canvasSupport() {\n  return Modernizr.canvas;\n}\n\nfunction LeWittApp(inputs) {\n  if (!canvasSupport()) {\n    return;\n  }\n\n  var canvas  = document.getElementById(\"canvas\");\n  var context = canvas.getContext(\"2d\");\n  var colors = {\n    \"pink\"                    : \"#FFC0CB\",\n    \"light pink\"              : \"#FFB6C1\",\n    \"hot pink\"                : \"#FF69B4\",\n    \"deep pink\"               : \"#FF1493\",\n    \"pale violet red\"         : \"#DB7093\",\n    \"medium violet red\"       : \"#C71585\",\n    \"light salmon\"            : \"#FFA07A\",\n    \"salmon\"                  : \"#FA8072\",\n    \"dark salmon\"             : \"#E9967A\",\n    \"light coral\"             : \"#F08080\",\n    \"indian red\"              : \"#CD5C5C\",\n    \"crimson\"                 : \"#DC143C\",\n    \"fire brick\"              : \"#B22222\",\n    \"dark red\"                : \"#8B0000\",\n    \"red\"                     : \"#FF0000\",\n    \"orange red\"              : \"#FF4500\",\n    \"tomato\"                  : \"#FF6347\",\n    \"coral\"                   : \"#FF7F50\",\n    \"dark orange\"             : \"#FF8C00\",\n    \"orange\"                  : \"#FFA500\",\n    \"yellow\"                  : \"#FFFF00\",\n    \"light yellow\"            : \"#FFFFE0\",\n    \"lemon chiffon\"           : \"#FFFACD\",\n    \"light goldenrod yellow\"  : \"#FAFAD2\",\n    \"papaya whip\"             : \"#FFEFD5\",\n    \"moccasin\"                : \"#FFE4B5\",\n    \"peach puff\"              : \"#FFDAB9\",\n    \"pale goldenrod\"          : \"#EEE8AA\",\n    \"khaki\"                   : \"#F0E68C\",\n    \"dark khaki\"              : \"#BDB76B\",\n    \"gold\"                    : \"#FFD700\",\n    \"cornsilk\"                : \"#FFF8DC\",\n    \"blanched almond\"         : \"#FFEBCD\",\n    \"bisque\"                  : \"#FFE4C4\",\n    \"navajo white\"            : \"#FFDEAD\",\n    \"wheat\"                   : \"#F5DEB3\",\n    \"burly wood\"              : \"#DEB887\",\n    \"tan\"                     : \"#D2B48C\",\n    \"rosy brown\"              : \"#BC8F8F\",\n    \"sandy brown\"             : \"#F4A460\",\n    \"goldenrod\"               : \"#DAA520\",\n    \"dark goldenrod\"          : \"#B8860B\",\n    \"peru\"                    : \"#CD853F\",\n    \"chocolate\"               : \"#D2691E\",\n    \"saddle brown\"            : \"#8B4513\",\n    \"sienna\"                  : \"#A0522D\",\n    \"brown\"                   : \"#A52A2A\",\n    \"maroon\"                  : \"#800000\",\n    \"dark olive green\"        : \"#556B2F\",\n    \"olive\"                   : \"#808000\",\n    \"olive drab\"              : \"#6B8E23\",\n    \"yellow green\"            : \"#9ACD32\",\n    \"lime green\"              : \"#32CD32\",\n    \"lime\"                    : \"#00FF00\",\n    \"lawn green\"              : \"#7CFC00\",\n    \"chartreuse\"              : \"#7FFF00\",\n    \"green yellow\"            : \"#ADFF2F\",\n    \"spring green\"            : \"#00FF7F\",\n    \"medium spring green\"     : \"#00FA9A\",\n    \"light green\"             : \"#90EE90\",\n    \"pale green\"              : \"#98FB98\",\n    \"dark sea green\"          : \"#8FBC8F\",\n    \"medium sea green\"        : \"#3CB371\",\n    \"sea green\"               : \"#2E8B57\",\n    \"forest green\"            : \"#228B22\",\n    \"green\"                   : \"#008000\",\n    \"dark green\"              : \"#006400\",\n    \"medium aquamarine\"       : \"#66CDAA\",\n    \"aqua\"                    : \"#00FFFF\",\n    \"cyan\"                    : \"#00FFFF\",\n    \"light cyan\"              : \"#E0FFFF\",\n    \"pale turquoise\"          : \"#AFEEEE\",\n    \"aquamarine\"              : \"#7FFFD4\",\n    \"turquoise\"               : \"#40E0D0\",\n    \"medium turquoise\"        : \"#48D1CC\",\n    \"dark turquoise\"          : \"#00CED1\",\n    \"light sea green\"         : \"#20B2AA\",\n    \"cadet blue\"              : \"#5F9EA0\",\n    \"dark cyan\"               : \"#008B8B\",\n    \"teal\"                    : \"#008080\",\n    \"light steel blue\"        : \"#B0C4DE\",\n    \"powder blue\"             : \"#B0E0E6\",\n    \"light blue\"              : \"#ADD8E6\",\n    \"sky blue\"                : \"#87CEEB\",\n    \"light sky blue\"          : \"#87CEFA\",\n    \"deep sky blue\"           : \"#00BFFF\",\n    \"dodger blue\"             : \"#1E90FF\",\n    \"cornflower blue\"         : \"#6495ED\",\n    \"steel blue\"              : \"#4682B4\",\n    \"royal blue\"              : \"#4169E1\",\n    \"blue\"                    : \"#0000FF\",\n    \"medium blue\"             : \"#0000CD\",\n    \"dark blue\"               : \"#00008B\",\n    \"navy\"                    : \"#000080\",\n    \"midnight blue\"           : \"#191970\",\n    \"lavender\"                : \"#E6E6FA\",\n    \"thistle\"                 : \"#D8BFD8\",\n    \"plum\"                    : \"#DDA0DD\",\n    \"violet\"                  : \"#EE82EE\",\n    \"orchid\"                  : \"#DA70D6\",\n    \"fuchsia\"                 : \"#FF00FF\",\n    \"magenta\"                 : \"#FF00FF\",\n    \"medium orchid\"           : \"#BA55D3\",\n    \"medium purple\"           : \"#9370DB\",\n    \"blue violet\"             : \"#8A2BE2\",\n    \"dark violet\"             : \"#9400D3\",\n    \"dark orchid\"             : \"#9932CC\",\n    \"dark magenta\"            : \"#8B008B\",\n    \"purple\"                  : \"#800080\",\n    \"indigo\"                  : \"#4B0082\",\n    \"dark slate blue\"         : \"#483D8B\",\n    \"slate blue\"              : \"#6A5ACD\",\n    \"medium slate blue\"       : \"#7B68EE\",\n    \"white\"                   : \"#FFFFFF\",\n    \"snow\"                    : \"#FFFAFA\",\n    \"honeydew\"                : \"#F0FFF0\",\n    \"mint cream\"              : \"#F5FFFA\",\n    \"azure\"                   : \"#F0FFFF\",\n    \"alice blue\"              : \"#F0F8FF\",\n    \"ghost white\"             : \"#F8F8FF\",\n    \"white smoke\"             : \"#F5F5F5\",\n    \"seashell\"                : \"#FFF5EE\",\n    \"beige\"                   : \"#F5F5DC\",\n    \"old lace\"                : \"#FDF5E6\",\n    \"floral white\"            : \"#FFFAF0\",\n    \"ivory\"                   : \"#FFFFF0\",\n    \"antique white\"           : \"#FAEBD7\",\n    \"linen\"                   : \"#FAF0E6\",\n    \"lavender blush\"          : \"#FFF0F5\",\n    \"misty rose\"              : \"#FFE4E1\",\n    \"gainsboro\"               : \"#DCDCDC\",\n    \"light grey\"              : \"#D3D3D3\",\n    \"silver\"                  : \"#C0C0C0\",\n    \"dark gray\"               : \"#A9A9A9\",\n    \"gray\"                    : \"#808080\",\n    \"dim gray\"                : \"#696969\",\n    \"light slate gray\"        : \"#778899\",\n    \"slate gray\"              : \"#708090\",\n    \"dark slate gray\"         : \"#2F4F4F\",\n    \"black\"                   : \"#000000\",\n    \"rebecca purple\"          : \"#663399\"\n  };\n  var sizes = {\n    tiny    : 20,\n    small   : 50,\n    medium  : 100,\n    big     : 200,\n    large   : 200,\n    huge    : 300,\n    random  : 40\n  };\n\n  // TODO Handle statements that include positions for shapes\n  var positions = [\n    \"grid\",\n    \"vertical\",\n    \"horizontal\",\n    \"random\",\n    \"smile\",\n    \"frown\",\n    \"stack\",\n    \"inside\"\n  ];\n\n// UTILITIES\n  var makeProp = function(obj, props, name) {\n    var setter = \"set\" + name;\n    var getter = \"get\" + name;\n\n    obj[setter] = function(v) {\n      props[name] = v;\n    };\n\n    obj[getter] = function() {\n      return props[name];\n    };\n  };\n\n  var Random = function() {\n    var m_w = _.random(0, 100000000);\n    var m_z = 987654321;\n    var mask = 0xffffffff;\n\n    // Takes any integer\n    function seed(i) {\n        m_w = i;\n        m_z = 987654321;\n        return i;\n    }\n    // Returns number between 0 (inclusive) and 1.0 (exclusive),\n    // just like Math.random().\n    function random()\n    {\n        m_z = (36969 * (m_z & 65535) + (m_z >> 16)) & mask;\n        m_w = (18000 * (m_w & 65535) + (m_w >> 16)) & mask;\n        var result = ((m_z << 16) + m_w) & mask;\n        result /= 4294967296;\n        return result + 0.5;\n    }\n\n    function randInt(mv, xv) {\n      return mv + Math.floor((xv - mv) * random());\n    }\n\n    return {\n      seed    : seed,\n      random  : random,\n      randInt : randInt\n    };\n  };\n  var masterRand = Random();\n\n  var clearCanvas = function() {\n    context.clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n// -- Generators ---------------------------------------------------------\n  var ConstGen = function(k) {\n    var value = k;\n\n    return function() {\n      return value;\n    };\n  };\n\n  var LinearGen = function(start, increment) {\n    var value = start;\n    var inc   = increment;\n\n    return function() {\n      var retVal = value;\n      value += inc;\n      return retVal;\n    };\n  };\n\n  var RandomGen = function(minVal, maxVal) {\n    var mv = minVal;\n    var xv = maxVal;\n\n    return function() {\n      return masterRand.randInt(mv, xv);\n    };\n  };\n\n// -- Shapes -------------------------------------------------------------\n  var Circle = function(config) {\n      var props = {\n        color       : \"grey\",\n        width       : ConstGen(50),\n        height      : ConstGen(50),\n        xPos        : ConstGen(0),\n        yPos        : ConstGen(0),\n        startAngle  : 0,\n        endAngle    : 360,\n        reverse     : false,\n        lineWidth   : 1\n      };\n\n      _.assign(props, config);\n\n      function draw() {\n          context.fillStyle = colors[props.color];\n          // context.strokeStyle = colors[props.color];\n          context.lineWidth = props.lineWidth;\n          context.beginPath();\n          context.arc(\n            props.xPos,\n            props.yPos,\n            props.width / 2,\n            (Math.PI/180)*props.startAngle,\n            (Math.PI/180)*props.endAngle,\n            props.reverse,\n            false\n          );\n          context.fill();\n          // context.stroke();\n      }\n\n      return {\n          draw: draw\n      };\n  };\n\n  var Rectangle = function(config) {\n    var props = {\n      color     : \"grey\",\n      width     : ConstGen(50),\n      height    : ConstGen(50),\n      xPos      : ConstGen(0),\n      yPos      : ConstGen(0),\n      lineWidth : 1\n    };\n\n    _.assign(props, config);\n\n    function draw() {\n      context.fillStyle = props.color;\n      context.lineWidth = props.lineWidth;\n      context.beginPath();\n      // context.strokeStyle = props.color;\n      context.rect(\n        props.xPos,\n        props.yPos,\n        props.width,\n        props.height\n      );\n      context.fill();\n      // context.stroke();\n    }\n\n    return {\n      draw: draw\n    };\n  };\n\n  var Triangle = function(config) {\n    var props = {\n      color     : \"grey\",\n      width     : ConstGen(50),\n      height    : ConstGen(50),\n      xPos      : 0,\n      yPos      : 0,\n      lineWidth : 1\n    };\n\n    _.assign(props, config);\n\n    function draw() {\n      context.beginPath();\n      context.fillStyle = colors[props.color];\n      context.moveTo(\n        props.xPos,\n        props.yPos\n      );\n      context.lineTo(\n        props.xPos + props.width / 2,\n        props.yPos + props.height\n      );\n      context.lineTo(\n        props.xPos - props.width / 2,\n        props.yPos + props.height\n      );\n      context.closePath();\n      context.fill();\n    }\n\n    return {\n      draw: draw\n    };\n  };\n\n  var StraightLine = function(config) {\n    var props = {\n      lineColor   : \"grey\",\n      startX      : ConstGen(0),\n      startY      : ConstGen(0),\n      endX        : ConstGen(0),\n      endY        : ConstGen(0),\n      lineWidth   : 1\n    };\n\n    _.assign(props, config);\n\n    function draw() {\n      context.lineWidth = props.lineWidth;\n      context.strokeStyle = props.lineColor;\n      context.beginPath();\n      context.moveTo(props.startX, props.startY);\n      context.lineTo(props.endX, props.endY);\n      context.stroke();\n    }\n\n    return {\n      draw: draw\n    };\n  };\n\n  var ZigzagLine = function(config) {\n    var props = {\n      color     : \"grey\",\n      zigs      : 10,\n      startX    : 0,\n      startY    : 0,\n      spacing   : 10,\n      lineWidth : 1\n    };\n\n    _.assign(props, config);\n\n    function draw() {\n      context.lineWidth = props.lineWidth;\n      context.strokeStyle = props.color;\n      context.beginPath();\n      context.moveTo(props.startX, props.startY);\n\n      for (var z = 0; z < props.zigs; z++) {\n        var x = props.startX + ((z + 1) * props.spacing);\n        var y;\n        if (z % 2 === 0) {\n          y = props.startY + props.spacing;\n        } else {\n          y = props.startY;\n        }\n        context.lineTo(x, y);\n      }\n      context.stroke();\n    }\n\n    return {\n      draw: draw\n    };\n  };\n\n  var Spiral = function(config) {\n    var props = {\n      color     : \"grey\",\n      context   : null,\n      radius    : 0,\n      angle     : 0,\n      startX    : 0,\n      startY    : 0,\n      lineWidth : 3,\n    };\n\n    _.assign(props, config);\n\n    function draw() {\n      var newRadius   = props.radius;\n      var newAngle    = props.angle;\n\n      context.lineWidth = props.lineWidth;\n      context.strokeStyle = props.color;\n      context.beginPath();\n      context.moveTo(props.startX, props.startY);\n\n      for (var z = 0; z < 150; z++) {\n        newRadius += 0.75;\n        newAngle += (Math.PI * 2) / 50;\n        var x = props.startX + newRadius * Math.cos(newAngle);\n        var y = props.startY + newRadius * Math.sin(newAngle);\n        context.lineTo(x,y);\n      }\n      context.stroke();\n    }\n\n    return {\n      draw: draw\n    };\n  };\n\n  var WavyLine = function(config) {\n    var props = {\n      color     : \"grey\",\n      startX    : ConstGen(0),\n      startY    : ConstGen(0),\n      endX      : 0,\n      endY      : 0,\n      lineWidth : 1,\n    };\n\n    var increments = {\n      small   : 20,\n      medium  : 50,\n      large   : 100\n    };\n\n    _.assign(props, config);\n\n    function draw() {\n\n      context.lineWidth = props.lineWidth;\n      context.strokeStyle = props.color;\n      context.beginPath();\n      context.moveTo(props.startX.next(), props.startY.next());\n\n      var index = 0;\n      var curveValues = [\n        props.startY.next() - increments[props.size],\n        props.startY.next() + increments[props.size]\n      ];\n\n      var firstX  = props.startX.next() + increments[props.size];\n      var secondX = firstX + increments[props.size];\n\n      for (var x = props.startX.next(); x < props.endX; x++ ) {\n        curve = curveValues[index];\n        index = 1 - index;\n        context.quadraticCurveTo(\n          firstX,\n          curve,\n          secondX,\n          props.endY\n        );\n        firstX  = secondX + increments[props.size];\n        secondX = firstX + increments[props.size];\n      }\n      context.stroke();\n    }\n\n    return {\n      draw: draw\n    };\n  };\n\n  var shapes = {\n    \"circle\"        : Circle,\n    \"rectangle\"     : Rectangle,\n    \"triangle\"      : Triangle,\n    \"spiral\"        : Spiral,\n    \"wavyline\"      : WavyLine,\n    \"straightline\"  : StraightLine,\n    \"zigzagline\"    : ZigzagLine,\n    \"square\"        : Rectangle,\n    \"oval\"          : Circle,\n    \"dot\"           : Circle,\n    \"point\"         : Circle\n  };\n\n// -- Core  ---------------------------------------------------------------------\n  var BackgroundInstruction = function(config) {\n    var props   = {};\n    var retVal  = {};\n\n    props = {\n      description   : null,\n      what          : \"the background is\",\n      color         : colors.black\n    };\n\n    _.assign(props, config);\n\n    makeProp(retVal, props, \"description\");\n    makeProp(retVal, props, \"what\");\n    makeProp(retVal, props, \"color\");\n\n    return retVal;\n  };\n\n  var ShapeInstruction = function(config) {\n    var props   = {};\n    var retVal  = {};\n\n    props = {\n      description     : null,\n      what            : \"there is\",\n      number          : 1,\n      shape           : \"circle\",\n      size            : \"small\",\n      position        : \"center\",\n      color           : \"black\",\n      fillColor       : \"random\",\n      lineColor       : \"random\"\n    };\n\n      _.assign(props, config);\n\n      makeProp(retVal, props, \"description\");\n      makeProp(retVal, props, \"what\");\n      makeProp(retVal, props, \"number\");\n      makeProp(retVal, props, \"shape\");\n      makeProp(retVal, props, \"size\");\n      makeProp(retVal, props, \"position\");\n      makeProp(retVal, props, \"color\");\n      // makeProp(retVal, props, \"fillColor\");\n      // makeProp(retVal, props, \"lineColor\");\n\n    return retVal;\n  };\n\n  var instructionTypes = {\n    \"backgroundIns\"  : BackgroundInstruction,\n    \"shapeIns\"       : ShapeInstruction\n  };\n\n  var parseInput = function(inputs) {\n    // TODO Handle both fill and line colors.\n\n    _.each(inputs, function(input) {\n      Debugger.log(\"This is what I have: \" + input);\n    });\n\n    var test = parser.parse(inputs.join(\"\\n\").toLowerCase(), shapes);\n    Debugger.log(\"Test:\" + test);\n    // var pattern1 = RegExp(\n    //   \"(there is|there are) (a|an|[0-9]+) ?(\" +\n    //   _.keys(sizes).join('|') +\n    //   \")* ?(\" +\n    //   _.keys(colors).join('|') +\n    //   \")* +(\" +\n    //   _.keys(shapes).join('|') +\n    //   \")(?:.)\",\n    //   \"i\"\n    // );\n    // var pattern2 = RegExp(\n    //   \"(the background is) (\" +\n    //   _.keys(colors).join('|') +\n    //   \")(?:.)\",\n    //   \"i\"\n    // );\n    // var patternList             = [pattern1, pattern2];\n    // var instructions            = [];\n    // var drawInstructions        = [];\n    // var backgroundInstructions  = [];\n    //\n    // _.each(inputs, function(input) {\n    //   var insNum    = 0;\n    //   var match     = null;\n    //   var insColor;\n    //   var insShape;\n    //   var insSize;\n    //   var insWhat;\n    //\n    //   _.each(patternList, function(pattern) {\n    //     var result = _.compact(pattern.exec(input.toLowerCase()));\n    //\n    //     if (result.length) {\n    //       match = result;\n    //       console.log(\"parse() :: match: \", match);\n    //     }\n    //   });\n    //\n    //   if (match) {\n    //     var insDesc = input;\n    //\n    //     Debugger.log(\"match: \" + insDesc);\n    //\n    //     _.each(match, function(item) {\n    //\n    //       var color   = _.has(colors, item);\n    //       var shape   = _.has(shapes, item);\n    //       var size    = _.has(sizes, item);\n    //\n    //       var numMatcher      = RegExp(\"([0-9]+)\");\n    //       var numMatchResult  = numMatcher.exec(item);\n    //\n    //       if (numMatchResult) {\n    //         insNum = numMatchResult[1];\n    //       }\n    //\n    //       if (item == \"there is\" ||\n    //           item == \"there are\" ||\n    //           item == \"the background is\") {\n    //         insWhat = item;\n    //       }\n    //       if (item == \"a\" || item == \"an\") {\n    //         insNum = 1;\n    //       }\n    //\n    //       if (color === true ) {\n    //         insColor = item;\n    //       }\n    //       if (shape === true) {\n    //         insShape = item;\n    //       }\n    //       if (size === true) {\n    //         insSize = item;\n    //       }\n    //     });\n    //\n    //     if (insSize === undefined) {\n    //       insSize = \"small\";\n    //     }\n    //\n    //     var instruction;\n    //\n    //     if (insWhat === \"the background is\" ) {\n    //       instruction = BackgroundInstruction({\n    //         description:  insDesc,\n    //         what:         insWhat,\n    //         color:        insColor\n    //       });\n    //\n    //       Debugger.log(\"Description: \" + insDesc);\n    //       Debugger.log(\"What: \" + insWhat);\n    //       Debugger.log(\"Color: \" + insColor);\n    //\n    //       backgroundInstructions.push(instruction);\n    //\n    //     } else {\n    //       console.log(\"parse(): description \", insDesc);\n    //       console.log(\"parse(): what \", insWhat);\n    //       console.log(\"parse(): shape \", insShape);\n    //       console.log(\"parse(): size \", insSize);\n    //       console.log(\"parse(): number \", insNum);\n    //       console.log(\"parse(): color \", insColor);\n    //       instruction = ShapeInstruction({\n    //         description:  insDesc,\n    //         what:         insWhat,\n    //         shape:        insShape,\n    //         size:         insSize,\n    //         number:       insNum,\n    //         color:        insColor\n    //       });\n    //       drawInstructions.push(instruction);\n    //     }\n    //     instructions.push(backgroundInstructions);\n    //     instructions.push(drawInstructions);\n    //   }\n    // });\n    //\n    // console.log(\"parse() :: Instructions: \", instructions);\n\n    return instructions;\n  };\n\n  var draw = function(instructions) {\n\n    _.each(instructions[0], function(ins) {\n      var color = ins.getcolor();\n      var background = Rectangle({\n        width   : canvas.width,\n        height  : canvas.height,\n        xPos    : 0,\n        yPos    : 0,\n        color   : colors[color]\n      });\n\n      Debugger.log(\"COLOR: \" + color);\n      background.draw();\n    });\n\n    _.each(instructions[1], function(ins) {\n      var padding       = 5; // TODO Update padding when positioning works\n      var shapeConfig   = {};\n      var pointsStore   = [];\n      var what          = ins.getwhat();\n      var number        = ins.getnumber();\n      var shape         = ins.getshape();\n      var size          = ins.getsize();\n      var position      = ins.getposition();\n      var color         = ins.getcolor();\n      var xPos;\n      var yPos;\n      var shapeToDraw;\n      var totalWidth;\n\n      if (what == \"there is\" || what == \"there are\") {\n\n        // FIXME Correct the positioning of shapes\n        // triangles and circles are way off\n        totalWidth  = sizes[size] * number + padding * (number - 1);\n        xPos        = (canvas.width - totalWidth) / 2;\n        yPos        = (canvas.height - sizes[size]) / 2;\n\n        for (var x = 0; x < number; x++) {\n          switch (shape) {\n\n          case \"circle\":\n          case \"square\":\n          case \"triangle\":\n          case \"rectangle\":\n            shapeConfig = {\n              color   : color,\n              xPos    : xPos,\n              yPos    : yPos,\n              width   : sizes[size],\n              height  : sizes[size]\n            };\n            break;\n\n          case \"dot\" :\n            xPos   = RandomGen(0, canvas.width)();\n            yPos   = RandomGen(0, canvas.height)();\n\n            pointsStore.push([xPos, yPos]);\n\n            shapeConfig = {\n              color   : color,\n              xPos    : xPos,\n              yPos    : yPos,\n              width   : 1,\n              height  : 1\n            };\n            break;\n          }\n          shapeToDraw = shapes[shape](shapeConfig);\n          shapeToDraw.draw();\n          xPos += sizes[size] + padding;\n        }\n\n        if (pointsStore.length) {\n          // Sample statement to work with:\n          // There are 10 dots.\n          // Each dots has 100 lines radiating out from it.\n          // There are 100 dots with 100 lines radiating out from each dot.\n\n          for (var y = 0; y < pointsStore.length; y++) {\n            for (var l = 0; l < 2; l++) {\n              var randX = RandomGen (800,1000);\n              var randY = RandomGen(0, -100);\n\n              lineToDraw = StraightLine({\n                startX  : pointsStore[y][0],\n                startY  : pointsStore[y][1],\n                endX    : randX(),\n                endY    : randY()\n              });\n              lineToDraw.draw();\n            }\n          }\n        }\n      }\n    });\n  };\n  clearCanvas();\n  var instructions = parseInput(inputs);\n  //draw(instructions);\n}\n\nvar handleInput = function() {\n\n  // TODO Handle any number of user inputs.\n  var userInputs = [];\n\n  for (var x = 0; x < 2; x++ ) {\n    var element = document.getElementById(\"input\" + (x + 1));\n    if (element.value.length > 0) {\n      userInputs.push(element.value);\n    }\n  }\n\n  if (userInputs.length > 0) {\n    LeWittApp(userInputs);\n  } else {\n    // TODO Handle case where there are no entries\n  }\n};\n","markerStore":{"nextMarkerId":37,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":50,"preserveFolds":true,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"7":{"range":{"start":{"row":531,"column":0},"end":{"row":534,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"8":{"range":{"start":{"row":591,"column":0},"end":{"row":595,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"9":{"range":{"start":{"row":596,"column":0},"end":{"row":598,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"10":{"range":{"start":{"row":600,"column":0},"end":{"row":601,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"11":{"range":{"start":{"row":603,"column":0},"end":{"row":723,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"12":{"range":{"start":{"row":827,"column":0},"end":{"row":829,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"19":{"range":{"start":{"row":531,"column":0},"end":{"row":534,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"20":{"range":{"start":{"row":591,"column":0},"end":{"row":595,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"21":{"range":{"start":{"row":596,"column":0},"end":{"row":598,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"22":{"range":{"start":{"row":600,"column":0},"end":{"row":601,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"23":{"range":{"start":{"row":603,"column":0},"end":{"row":723,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"24":{"range":{"start":{"row":827,"column":0},"end":{"row":829,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"31":{"range":{"start":{"row":531,"column":0},"end":{"row":534,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"32":{"range":{"start":{"row":591,"column":0},"end":{"row":595,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"33":{"range":{"start":{"row":596,"column":0},"end":{"row":598,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"34":{"range":{"start":{"row":600,"column":0},"end":{"row":601,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"35":{"range":{"start":{"row":603,"column":0},"end":{"row":723,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"36":{"range":{"start":{"row":827,"column":0},"end":{"row":829,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false}},"version":2},"history":{"version":2,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/sarah/Dropbox/code/lewittscript/Experiments/lewittscript.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"d9caa73dd86641030d41875424d6b7981700d3b5","deserializer":"TextBuffer","version":2},{"text":"// The background is orange. [/]\n// There are 4 circles. [/]\n// There are 20 tiny crimson triangles. [/]\n// Each square has a dot inside it. [/]\n// There is a large black square. [/]\n// Each rectangles are different colors. [ ]\n// Each rectangles are in opposite corners. [ ]\n// There are 20 dots radonly spaced. [ ]\n// There are lines radiating out from each dot. [ ]\n// There is a green triangle beside the blue square. [ ]\n\nstart\n = sentences\n\nsentences\n = s:sentence+ { return s; }\n /*/ first:sentence rest:sentences\n    { rest.append(first); return rest; }*/\n\nsentence\n = bg: backgroundDescription { return bg; }\n / sd: initialShapeDescription { return sd; }\n / sm: shapeModifier { return sm; }\n\nbackgroundDescription\n = the _ background _ toBe _ col:color[.]* //{ return col; }\n {\n   bginst = BackgroundInstruction({color:col});\n   return bginst;\n }\n\ninitialShapeDescription\n = the _ toBe _ cnt:count _? siz:size _? col:color _? sh:shape[s]*[.]*\n {\n   sh.color = col\n   sh.size = siz\n   sh.count = cnt\n   return sh\n }\n\nshapeModifier\n = the _ shape _ toBe _ count _? size _? color _? shape _ location[.]*\n\nbackground\n = 'background'\n\nthe\n = \"there\"\n / \"the\"\n / \"each\"\n\naa\n = \"a\"\n\nlocation\n = \"in it\"\n / \"beside it\"\n / \"inside it\"\n / \"on top of it\"\n / \"under it\"\n / \"underneath it\"\n\ntoBe\n = \"is\"\n / \"are\"\n / \"will be\"\n / \"should be\"\n / \"must be\"\n / \"has a\"\n\n// TODO: No alignment options have been implemented yet. Needs more thought.\nalignment\n = \"grid\"\n / \"right diagonal\"\n / \"left diagonal\"\n / \"random\"\n / \"smile\"\n / \"frown\"\n / \"stack\"\n / \"randomly\"\n\ncolor\n = value: \"pink\" { return { color: value, hex: \"#FFC0CB\" }; }\n / value: \"light pink\" { return { color: value, hex: \"#FFB6C1\" }; }\n / value: \"hot pink\" { return { color: value, hex: \"#FF69B4\" }; }\n / value: \"deep pink\" { return { color: value, hex: \"#FF1493\" }; }\n / value: \"pale violet red\" { return { color: value, hex: \"#DB7093\" }; }\n / value: \"medium violet red\" { return { color: value, hex: \"#C71585\" }; }\n / value: \"light salmon\" { return { color: value, hex: \"#FFA07A\" }; }\n / value: \"salmon\" { return { color: value, hex: \"#FA8072\"}; }\n / value: \"dark salmon\" { return { color: value, hex: \"#E9967A\" }; }\n / value: \"light coral\" { return { color: value, hex: \"#F08080\" }; }\n / value: \"indian red\" { return { color: value, hex: \"#CD5C5C\" }; }\n / value: \"crimson\" { return { color: value, hex: \"#DC143C\" }; }\n / value: \"fire brick\" { return { color: value, hex: \"#B22222\" }; }\n / value: \"dark red\" { return { color: value, hex: \"#8B0000\" }; }\n / value: \"red\" { return { color: value, hex: \"#FF0000\" }; }\n / value: \"orange red\" { return { color: value, hex: \"#FF4500\" }; }\n / value: \"tomato\" { return { color: value, hex: \"#FF6347\" }; }\n / value: \"coral\" { return { color: value, hex: \"#FF7F50\" }; }\n / value: \"dark orange\" { return { color: value, hex: \"#FF8C00\" }; }\n / value: \"orange\" { return { color: value, hex: \"#FFA500\" }; }\n / value: \"yellow\" { return { color: value, hex: \"#FFFF00\" }; }\n / value: \"light yellow\" { return { color: value, hex: \"#FFFFE0\" }; }\n / value: \"lemon chiffon\" { return { color: value, hex: \"#FFFACD\" }; }\n / value: \"light goldenrod yellow\" { return { color: value, hex: \"#FAFAD2\" }; }\n / value: \"papaya whip\" { return { color: value, hex: \"#FFEFD5\" }; }\n / value: \"moccasin\" { return { color: value, hex: \"#FFE4B5\" }; }\n / value: \"peach puff\" { return { color: value, hex: \"#FFDAB9\" }; }\n / value: \"pale goldenrod\" { return { color: value, hex: \"#EEE8AA\" }; }\n / value: \"khaki\" { return { color: value, hex: \"#F0E68C\" }; }\n / value: \"dark khaki\" { return { color: value, hex: \"#BDB76B\" }; }\n / value: \"gold\" { return { color: value, hex: \"#FFD700\" }; }\n / value: \"cornsilk\" { return { color: value, hex: \"#FFF8DC\" }; }\n / value: \"blanched almond\" { return { color: value, hex: \"#FFEBCD\" }; }\n / value: \"bisque\" { return { color: value, hex: \"#FFE4C4\" }; }\n / value: \"navajo white\" { return { color: value, hex: \"#FFDEAD\" }; }\n / value: \"wheat\" { return { color: value, hex: \"#F5DEB3\" }; }\n / value: \"burly wood\" { return { color: value, hex: \"#DEB887\" }; }\n / value: \"tan\" { return { color: value, hex: \"#D2B48C\" }; }\n / value: \"rosy brown\" { return { color: value, hex: \"#BC8F8F\" }; }\n / value: \"sandy brown\" { return { color: value, hex: \"#F4A460\" }; }\n / value: \"goldenrod\" { return { color: value, hex: \"#DAA520\" }; }\n / value: \"dark goldenrod\" { return { color: value, hex: \"#B8860B\" }; }\n / value: \"peru\" { return { color: value, hex: \"#CD853F\" }; }\n / value: \"chocolate\" { return { color: value, hex: \"#D2691E\" }; }\n / value: \"saddle brown\" { return { color: value, hex: \"#8B4513\" }; }\n / value: \"sienna\" { return { color: value, hex: \"#A0522D\" }; }\n / value: \"brown\" { return { color: value, hex: \"#A52A2A\" }; }\n / value: \"maroon\" { return { color: value, hex: \"#800000\" }; }\n / value: \"dark olive green\" { return { color: value, hex: \"#556B2F\" }; }\n / value: \"olive\" { return { color: value, hex: \"#808000\" }; }\n / value: \"olive drab\" { return { color: value, hex: \"#6B8E23\" }; }\n / value: \"yellow green\" { return { color: value, hex: \"#9ACD32\" }; }\n / value: \"lime green\" { return { color: value, hex: \"#32CD32\" }; }\n / value: \"lime\" { return { color: value, hex: \"#00FF00\" }; }\n / value: \"lawn green\" { return { color: value, hex: \"#7CFC00\" }; }\n / value: \"chartreuse\" { return { color: value, hex: \"#7FFF00\" }; }\n / value: \"green yellow\" { return { color: value, hex: \"#ADFF2F\" }; }\n / value: \"spring green\" { return { color: value, hex: \"#00FF7F\" }; }\n / value: \"medium spring green\" { return { color: value, hex: \"#00FA9A\" }; }\n / value: \"light green\" { return { color: value, hex: \"#90EE90\" }; }\n / value: \"pale green\" { return { color: value, hex: \"#98FB98\" }; }\n / value: \"dark sea green\" { return { color: value, hex: \"#8FBC8F\" }; }\n / value: \"medium sea green\" { return { color: value, hex: \"#3CB371\" }; }\n / value: \"sea green\" { return { color: value, hex: \"#2E8B57\" }; }\n / value: \"forest green\" { return { color: value, hex: \"#228B22\" }; }\n / value: \"green\" { return { color: value, hex: \"#008000\" }; }\n / value: \"dark green\" { return { color: value, hex: \"#006400\" }; }\n / value: \"medium aquamarine\" { return { color: value, hex: \"#66CDAA\" }; }\n / value: \"aqua\" { return { color: value, hex: \"#00FFFF\" }; }\n / value: \"cyan\" { return { color: value, hex: \"#00FFFF\" }; }\n / value: \"light cyan\" { return { color: value, hex: \"#E0FFFF\" }; }\n / value: \"pale turquoise\" { return { color: value, hex: \"#AFEEEE\" }; }\n / value: \"aquamarine\" { return { color: value, hex: \"#7FFFD4\" }; }\n / value: \"turquoise\" { return { color: value, hex: \"#40E0D0\" }; }\n / value: \"medium turquoise\" { return { color: value, hex: \"#48D1CC\" }; }\n / value: \"dark turquoise\" { return { color: value, hex: \"#00CED1\" }; }\n / value: \"light sea green\" { return { color: value, hex: \"#20B2AA\" }; }\n / value: \"cadet blue\" { return { color: value, hex: \"#5F9EA0\" }; }\n / value: \"dark cyan\" { return { color: value, hex: \"#008B8B\" }; }\n / value: \"teal\" { return { color: value, hex: \"#008080\" }; }\n / value: \"light steel blue\" { return { color: value, hex: \"#B0C4DE\" }; }\n / value: \"powder blue\" { return { color: value, hex: \"#B0E0E6\" }; }\n / value: \"light blue\" { return { color: value, hex: \"#ADD8E6\" }; }\n / value: \"sky blue\" { return { color: value, hex: \"#87CEEB\" }; }\n / value: \"light sky blue\" { return { color: value, hex: \"#87CEFA\" }; }\n / value: \"deep sky blue\" { return { color: value, hex: \"#00BFFF\" }; }\n / value: \"dodger blue\" { return { color: value, hex: \"#1E90FF\" }; }\n / value: \"cornflower blue\" { return { color: value, hex: \"#6495ED\" }; }\n / value: \"steel blue\" { return { color: value, hex: \"#4682B4\" }; }\n / value: \"royal blue\" { return { color: value, hex: \"#4169E1\" }; }\n / value: \"blue\" { return { color: value, hex: \"#0000FF\" }; }\n / value: \"medium blue\" { return { color: value, hex: \"#0000CD\" }; }\n / value: \"dark blue\" { return { color: value, hex: \"#00008B\" }; }\n / value: \"navy\" { return { color: value, hex: \"#000080\" }; }\n / value: \"midnight blue\" { return { color: value, hex: \"#191970\" }; }\n / value: \"lavender\" { return { color: value, hex: \"#E6E6FA\" }; }\n / value: \"thistle\" { return { color: value, hex: \"#D8BFD8\" }; }\n / value: \"plum\" { return { color: value, hex: \"#DDA0DD\" }; }\n / value: \"violet\" { return { color: value, hex: \"#EE82EE\" }; }\n / value: \"orchid\" { return { color: value, hex: \"#DA70D6\" }; }\n / value: \"fuchsia\" { return { color: value, hex: \"#FF00FF\" }; }\n / value: \"magenta\" { return { color: value, hex: \"#FF00FF\" }; }\n / value: \"medium orchid\" { return { color: value, hex: \"#BA55D3\" }; }\n / value: \"medium purple\" { return { color: value, hex: \"#9370DB\" }; }\n / value: \"blue violet\" { return { color: value, hex: \"#8A2BE2\" }; }\n / value: \"dark violet\" { return { color: value, hex: \"#9400D3\" }; }\n / value: \"dark orchid\" { return { color: value, hex: \"#9932CC\" }; }\n / value: \"dark magenta\" { return { color: value, hex: \"#8B008B\" }; }\n / value: \"purple\" { return { color: value, hex: \"#800080\" }; }\n / value: \"indigo\" { return { color: value, hex: \"#4B0082\" }; }\n / value: \"dark slate blue\" { return { color: value, hex: \"#483D8B\" }; }\n / value: \"slate blue\" { return { color: value, hex: \"#6A5ACD\" }; }\n / value: \"medium slate blue\" { return { color: value, hex: \"#7B68EE\" }; }\n / value: \"white\" { return { color: value, hex: \"#FFFFFF\" }; }\n / value: \"snow\" { return { color: value, hex: \"#FFFAFA\" }; }\n / value: \"honeydew\" { return { color: value, hex: \"#F0FFF0\" }; }\n / value: \"mint cream\" { return { color: value, hex: \"#F5FFFA\" }; }\n / value: \"azure\" { return { color: value, hex: \"#F0FFFF\" }; }\n / value: \"alice blue\" { return { color: value, hex: \"#F0F8FF\" }; }\n / value: \"ghost white\" { return { color: value, hex: \"#F8F8FF\" }; }\n / value: \"white smoke\" { return { color: value, hex: \"#F5F5F5\" }; }\n / value: \"seashell\" { return { color: value, hex: \"#FFF5EE\" }; }\n / value: \"beige\" { return { color: value, hex: \"#F5F5DC\" }; }\n / value: \"old lace\" { return { color: value, hex: \"#FDF5E6\" }; }\n / value: \"floral white\" { return { color: value, hex: \"#FFFAF0\" }; }\n / value: \"ivory\" { return { color: value, hex: \"#FFFFF0\" }; }\n / value: \"antique white\" { return { color: value, hex: \"#FAEBD7\" }; }\n / value: \"linen\" { return { color: value, hex: \"#FAF0E6\" }; }\n / value: \"lavender blush\" { return { color: value, hex: \"#FFF0F5\" }; }\n / value: \"misty rose\" { return { color: value, hex: \"#FFE4E1\" }; }\n / value: \"gainsboro\" { return { color: value, hex: \"#DCDCDC\" }; }\n / value: \"light grey\" { return { color: value, hex: \"#D3D3D3\" }; }\n / value: \"silver\" { return { color: value, hex: \"#C0C0C0\" }; }\n / value: \"dark gray\" { return { color: value, hex: \"#A9A9A9\" }; }\n / value: \"gray\" { return { color: value, hex: \"#808080\" }; }\n / value: \"dim gray\" { return { color: value, hex: \"#696969\" }; }\n / value: \"light slate gray\" { return { color: value, hex: \"#778899\" }; }\n / value: \"slate gray\" { return { color: value, hex: \"#708090\" }; }\n / value: \"dark slate gray\" { return { color: value, hex: \"#2F4F4F\" }; }\n / value: \"black\" { return { color: value, hex: \"#000000\" }; }\n / value: \"rebecca purple\" { return { color: value, hex: \"#663399\" }; }\n / { return { color: \"default\", hex: \"#000000\" }; }\n\nsize\n = value: \"tiny\" { return { size: value, num: 20 }; }\n / value: \"small\" { return { size: value, num: 50 }; }\n / value: \"medium\" { return { size: value, num: 100 }; }\n / value: \"big\" { return { size: value, num: 200 }; }\n / value: \"large\" { return { size: value, num: 200 }; }\n / value: \"huge\" { return { size: value, num: 300 }; }\n / { return { size: \"default\", num: 30 }; }\n\nshape\n = value: \"circle\" { return options.circle(); }\n / value: \"rectangle\" { return options.rectangle(); }\n / value: \"triangle\" { return options.triangle(); }\n / value: \"spiral\" { return options.spiral(); }\n / value: \"wavy line\" { return options.wavyline(); }\n / value: \"straight line\" { return options.straightine(); }\n / value: \"zigzag line\" { return options.zigzagline(); }\n / value: \"square\" { return options.rectangle(); }\n / value: \"oval\" { return options.circle(); }\n / value: \"dot\" { return options.circle(); }\n / value: \"point\" { return options.circle(); }\n / { return options.circle; }\n\ncount\n = value: integer { return { count: value }; }\n / value: \"a\" { return { count: 1 }; }\n / { return { count: 0 }; }\n\ninteger\n = digits:[0-9]+ { return parseInt(digits.join(\"\"), 10) }\n\nhex \"hexidecimal\"\n = [0-9a-f]i\n\n// Whitespace\n_\n = [ \\t\\r\\n]+\n","markerStore":{"nextMarkerId":17,"markersById":{"0":{"range":{"start":{"row":232,"column":43},"end":{"row":232,"column":43}},"properties":{"type":"selection","editorId":86,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"7":{"range":{"start":{"row":16,"column":0},"end":{"row":18,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"8":{"range":{"start":{"row":21,"column":0},"end":{"row":22,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"9":{"range":{"start":{"row":23,"column":0},"end":{"row":23,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"10":{"range":{"start":{"row":25,"column":0},"end":{"row":30,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"11":{"range":{"start":{"row":32,"column":0},"end":{"row":39,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"12":{"range":{"start":{"row":235,"column":0},"end":{"row":247,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"15":{"range":{"start":{"row":232,"column":42},"end":{"row":232,"column":43}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"16":{"range":{"start":{"row":232,"column":3},"end":{"row":232,"column":4}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false}},"version":2},"history":{"version":2,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/sarah/Dropbox/code/lewittscript/Experiments/grammar.pegjs","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"2f2a419164130f674af73c8cc77e78328de5a142","deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":44,"softTabs":true,"displayBuffer":{"id":45,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/Dropbox/code/lewittscript/Experiments/index.html","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":86,"softTabs":true,"displayBuffer":{"id":87,"softWrapped":true,"scrollTop":4169,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/Dropbox/code/lewittscript/Experiments/grammar.pegjs","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":50,"softTabs":true,"displayBuffer":{"id":51,"softWrapped":true,"editorWidthInChars":null,"scrollTop":55,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/sarah/Dropbox/code/lewittscript/Experiments/lewittscript.js","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"deserializer":"SettingsView","version":2,"activePanelName":"Updates","uri":"atom://config/updates"}],"activeItemURI":"/Users/sarah/Dropbox/code/lewittscript/Experiments/grammar.pegjs","focused":true,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-html","language-javascript","language-pegjs","language-hyperlink","language-todo"],"deserializer":"Workspace"},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"packageStates":{"fuzzy-finder":{"/Users/sarah/Dropbox/code/lewittscript/Experiments/index.html":1438450686399,"/Users/sarah/Dropbox/code/lewittscript/Experiments/grammar.pegjs":1438450691461,"/Users/sarah/Dropbox/code/lewittscript/Experiments/lewittscript.js":1438450682467},"keybinding-resolver":{},"metrics":{"sessionLength":412092},"tree-view":{"directoryExpansionStates":{"/Users/sarah/code/lewittscript":{"isExpanded":true,"entries":{"Experiments":{"isExpanded":true,"entries":{".sass-cache":{"isExpanded":false,"entries":{}},"css":{"isExpanded":false,"entries":{}}}}}}},"selectedPath":"/Users/sarah/code/lewittscript/Experiments/grammar.pegjs","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["canvas"],"replaceHistory":[],"pathsHistory":[]},"filetype-color":{},"linter":{"scope":"File"},"tabs":[{}]}}