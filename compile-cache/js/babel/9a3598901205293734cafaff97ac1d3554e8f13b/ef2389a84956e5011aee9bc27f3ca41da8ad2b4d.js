Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.install = install;
exports.installPackage = installPackage;

var _helper = require('./helper');

'use babel';
var FS = require('fs');
var Path = require('path');
var View = require('./view');

window.__sb_package_deps = window.__sb_package_deps || [];

function install(packageName) {
  var enablePackages = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

  if (!packageName) throw new Error('packageName is required');

  var packageDeps = atom.packages.getLoadedPackage(packageName).metadata['package-deps'] || [];
  var packagesToInstall = [];
  packageDeps.forEach(function (name) {
    if (__sb_package_deps.indexOf(name) === -1) {
      __sb_package_deps.push(name);
      if (!atom.packages.resolvePackagePath(name)) {
        packagesToInstall.push(name);
      } else if (!atom.packages.getActivePackage(name) && enablePackages) {
        atom.packages.enablePackage(name);
        atom.packages.activatePackage(name);
      }
    }
  });
  if (packagesToInstall.length) {
    return installPackage(packageName, packagesToInstall);
  } else return Promise.resolve();
}

function installPackage(packageName, packageNames) {
  var APMPath = atom.packages.getApmPath();
  var promises = [];
  var view = new View(packageName, packageNames);
  return view.createNotification().then(function () {
    packageNames.forEach(function (name) {
      promises.push((0, _helper.exec)(APMPath, ['install', name]));
    });
    return Promise.all(promises);
  }).then(function (outputs) {
    outputs.forEach(function (output, index) {
      var name = packageNames[index];
      if (output.indexOf('âœ“') === -1 && output.indexOf('[32mdone') === -1) {
        view.markErrored(name, output);
      } else {
        atom.packages.enablePackage(name);
        atom.packages.activatePackage(name);
        view.markFinished();
      }
    });
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYXJhaC8uYXRvbS9wYWNrYWdlcy9saW50ZXItcnVieS9ub2RlX21vZHVsZXMvYXRvbS1wYWNrYWdlLWRlcHMvbGliL21haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O3NCQUltQixVQUFVOztBQUo3QixXQUFXLENBQUE7QUFDWCxJQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUE7QUFDeEIsSUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0FBQzVCLElBQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQTs7QUFHOUIsTUFBTSxDQUFDLGlCQUFpQixHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsSUFBSSxFQUFFLENBQUE7O0FBRWxELFNBQVMsT0FBTyxDQUFDLFdBQVcsRUFBeUI7TUFBdkIsY0FBYyx5REFBRyxJQUFJOztBQUN4RCxNQUFJLENBQUMsV0FBVyxFQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMseUJBQXlCLENBQUMsQ0FBQTs7QUFFNUQsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxDQUFBO0FBQzlGLE1BQU0saUJBQWlCLEdBQUcsRUFBRSxDQUFBO0FBQzVCLGFBQVcsQ0FBQyxPQUFPLENBQUMsVUFBUyxJQUFJLEVBQUU7QUFDakMsUUFBSSxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7QUFDMUMsdUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO0FBQzVCLFVBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxFQUFFO0FBQzNDLHlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtPQUM3QixNQUFNLElBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLGNBQWMsRUFBRTtBQUNqRSxZQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQTtBQUNqQyxZQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQTtPQUNwQztLQUNGO0dBQ0YsQ0FBQyxDQUFBO0FBQ0YsTUFBSSxpQkFBaUIsQ0FBQyxNQUFNLEVBQUU7QUFDNUIsV0FBTyxjQUFjLENBQUMsV0FBVyxFQUFFLGlCQUFpQixDQUFDLENBQUE7R0FDdEQsTUFBTSxPQUFPLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQTtDQUNoQzs7QUFFTSxTQUFTLGNBQWMsQ0FBQyxXQUFXLEVBQUUsWUFBWSxFQUFFO0FBQ3hELE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxFQUFFLENBQUE7QUFDMUMsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFBO0FBQ25CLE1BQU0sSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRSxZQUFZLENBQUMsQ0FBQTtBQUNoRCxTQUFPLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLElBQUksQ0FBQyxZQUFNO0FBQzFDLGdCQUFZLENBQUMsT0FBTyxDQUFDLFVBQVMsSUFBSSxFQUFFO0FBQ2xDLGNBQVEsQ0FBQyxJQUFJLENBQUMsa0JBQUssT0FBTyxFQUFFLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQTtLQUNoRCxDQUFDLENBQUE7QUFDRixXQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUE7R0FDN0IsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFTLE9BQU8sRUFBQztBQUN2QixXQUFPLENBQUMsT0FBTyxDQUFDLFVBQVMsTUFBTSxFQUFFLEtBQUssRUFBRTtBQUN0QyxVQUFNLElBQUksR0FBRyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUE7QUFDaEMsVUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7QUFDbkUsWUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUE7T0FDL0IsTUFBTTtBQUNMLFlBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFBO0FBQ2pDLFlBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFBO0FBQ25DLFlBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQTtPQUNwQjtLQUNGLENBQUMsQ0FBQTtHQUNILENBQUMsQ0FBQTtDQUNIIiwiZmlsZSI6Ii9Vc2Vycy9zYXJhaC8uYXRvbS9wYWNrYWdlcy9saW50ZXItcnVieS9ub2RlX21vZHVsZXMvYXRvbS1wYWNrYWdlLWRlcHMvbGliL21haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGJhYmVsJ1xuY29uc3QgRlMgPSByZXF1aXJlKCdmcycpXG5jb25zdCBQYXRoID0gcmVxdWlyZSgncGF0aCcpXG5jb25zdCBWaWV3ID0gcmVxdWlyZSgnLi92aWV3JylcbmltcG9ydCB7ZXhlY30gZnJvbSAnLi9oZWxwZXInXG5cbndpbmRvdy5fX3NiX3BhY2thZ2VfZGVwcyA9IHdpbmRvdy5fX3NiX3BhY2thZ2VfZGVwcyB8fCBbXVxuXG5leHBvcnQgZnVuY3Rpb24gaW5zdGFsbChwYWNrYWdlTmFtZSwgZW5hYmxlUGFja2FnZXMgPSB0cnVlKSB7XG4gIGlmICghcGFja2FnZU5hbWUpIHRocm93IG5ldyBFcnJvcigncGFja2FnZU5hbWUgaXMgcmVxdWlyZWQnKVxuXG4gIGNvbnN0IHBhY2thZ2VEZXBzID0gYXRvbS5wYWNrYWdlcy5nZXRMb2FkZWRQYWNrYWdlKHBhY2thZ2VOYW1lKS5tZXRhZGF0YVsncGFja2FnZS1kZXBzJ10gfHwgW11cbiAgY29uc3QgcGFja2FnZXNUb0luc3RhbGwgPSBbXVxuICBwYWNrYWdlRGVwcy5mb3JFYWNoKGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBpZiAoX19zYl9wYWNrYWdlX2RlcHMuaW5kZXhPZihuYW1lKSA9PT0gLTEpIHtcbiAgICAgIF9fc2JfcGFja2FnZV9kZXBzLnB1c2gobmFtZSlcbiAgICAgIGlmICghYXRvbS5wYWNrYWdlcy5yZXNvbHZlUGFja2FnZVBhdGgobmFtZSkpIHtcbiAgICAgICAgcGFja2FnZXNUb0luc3RhbGwucHVzaChuYW1lKVxuICAgICAgfSBlbHNlIGlmKCFhdG9tLnBhY2thZ2VzLmdldEFjdGl2ZVBhY2thZ2UobmFtZSkgJiYgZW5hYmxlUGFja2FnZXMpIHtcbiAgICAgICAgYXRvbS5wYWNrYWdlcy5lbmFibGVQYWNrYWdlKG5hbWUpXG4gICAgICAgIGF0b20ucGFja2FnZXMuYWN0aXZhdGVQYWNrYWdlKG5hbWUpXG4gICAgICB9XG4gICAgfVxuICB9KVxuICBpZiAocGFja2FnZXNUb0luc3RhbGwubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGluc3RhbGxQYWNrYWdlKHBhY2thZ2VOYW1lLCBwYWNrYWdlc1RvSW5zdGFsbClcbiAgfSBlbHNlIHJldHVybiBQcm9taXNlLnJlc29sdmUoKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5zdGFsbFBhY2thZ2UocGFja2FnZU5hbWUsIHBhY2thZ2VOYW1lcykge1xuICBjb25zdCBBUE1QYXRoID0gYXRvbS5wYWNrYWdlcy5nZXRBcG1QYXRoKClcbiAgY29uc3QgcHJvbWlzZXMgPSBbXVxuICBjb25zdCB2aWV3ID0gbmV3IFZpZXcocGFja2FnZU5hbWUsIHBhY2thZ2VOYW1lcylcbiAgcmV0dXJuIHZpZXcuY3JlYXRlTm90aWZpY2F0aW9uKCkudGhlbigoKSA9PiB7XG4gICAgcGFja2FnZU5hbWVzLmZvckVhY2goZnVuY3Rpb24obmFtZSkge1xuICAgICAgcHJvbWlzZXMucHVzaChleGVjKEFQTVBhdGgsIFsnaW5zdGFsbCcsIG5hbWVdKSlcbiAgICB9KVxuICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcylcbiAgfSkudGhlbihmdW5jdGlvbihvdXRwdXRzKXtcbiAgICBvdXRwdXRzLmZvckVhY2goZnVuY3Rpb24ob3V0cHV0LCBpbmRleCkge1xuICAgICAgY29uc3QgbmFtZSA9IHBhY2thZ2VOYW1lc1tpbmRleF1cbiAgICAgIGlmIChvdXRwdXQuaW5kZXhPZign4pyTJykgPT09IC0xICYmIG91dHB1dC5pbmRleE9mKCdbMzJtZG9uZScpID09PSAtMSkge1xuICAgICAgICB2aWV3Lm1hcmtFcnJvcmVkKG5hbWUsIG91dHB1dClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGF0b20ucGFja2FnZXMuZW5hYmxlUGFja2FnZShuYW1lKVxuICAgICAgICBhdG9tLnBhY2thZ2VzLmFjdGl2YXRlUGFja2FnZShuYW1lKVxuICAgICAgICB2aWV3Lm1hcmtGaW5pc2hlZCgpXG4gICAgICB9XG4gICAgfSlcbiAgfSlcbn1cbiJdfQ==
//# sourceURL=/Users/sarah/.atom/packages/linter-ruby/node_modules/atom-package-deps/lib/main.js
