module.exports = function (app) {

	return {

		// ALLOW TESLA LOGGING TO BE TURNED OFF IN CONFIG
		log: function log(what) {
			if (app.config.logging.console === true) console.log(what);
		},

		emptyObject: function emptyObject(obj) {
			return !Object.keys(obj).length;
		},

		countObject: function countObject(obj) {
			var count = 0;
			for (var key in obj) {
				if (obj(key)) {
					count++;
				}
			}

			return count;
		},

		'throw': function _throw(num) {

			var code = {
				400: '400 Bad Request',
				401: '401 Unauthorized',
				403: '403 Forbidden',
				404: '404 Not Found',
				405: '405 Method Not Allowed',
				500: '500 Internal Server Error'
			};

			var err = new Error(code[num]);
			err.code = num;
			err.message = code[num];
			err.status = num;

			return err;
		}

	};
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYXJhaC8uYXRvbS9wYWNrYWdlcy9zZXRpLXVpL2ZpbGUtdHlwZXMvSmF2YVNjcmlwdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsR0FBRyxFQUFFOztBQUUvQixRQUFPOzs7QUFHTixLQUFHLEVBQUUsYUFBUyxJQUFJLEVBQUU7QUFDbkIsT0FBSyxHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEtBQUssSUFBSSxFQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7R0FDN0Q7O0FBRUQsYUFBVyxFQUFFLHFCQUFTLEdBQUcsRUFBRTtBQUN6QixVQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUM7R0FDakM7O0FBRUQsYUFBVyxFQUFFLHFCQUFTLEdBQUcsRUFBRTtBQUMxQixPQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7QUFDZCxRQUFLLElBQUksR0FBRyxJQUFJLEdBQUcsRUFBRztBQUNwQixRQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTtBQUNYLFVBQUssRUFBRSxDQUFDO0tBQ1Q7SUFDRjs7QUFFRCxVQUFPLEtBQUssQ0FBQztHQUNiOztBQUVELFdBQU8sZ0JBQVMsR0FBRyxFQUFFOztBQUVwQixPQUFJLElBQUksR0FBRztBQUNWLE9BQUcsRUFBRyxpQkFBaUI7QUFDdkIsT0FBRyxFQUFHLGtCQUFrQjtBQUN4QixPQUFHLEVBQUcsZUFBZTtBQUNyQixPQUFHLEVBQUcsZUFBZTtBQUNyQixPQUFHLEVBQUcsd0JBQXdCO0FBQzlCLE9BQUcsRUFBRywyQkFBMkI7SUFDakMsQ0FBQzs7QUFFRixPQUFJLEdBQUcsR0FBRyxJQUFJLEtBQUssQ0FBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUUsQ0FBQztBQUM3QixNQUFHLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQztBQUNmLE1BQUcsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3hCLE1BQUcsQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDOztBQUVyQixVQUFPLEdBQUcsQ0FBQztHQUVYOztFQUVELENBQUM7Q0FFRixDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9zYXJhaC8uYXRvbS9wYWNrYWdlcy9zZXRpLXVpL2ZpbGUtdHlwZXMvSmF2YVNjcmlwdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFwcCkge1xuXG5cdHJldHVybiB7XG5cblx0XHQvLyBBTExPVyBURVNMQSBMT0dHSU5HIFRPIEJFIFRVUk5FRCBPRkYgSU4gQ09ORklHXG5cdFx0bG9nOiBmdW5jdGlvbih3aGF0KSB7XG5cdFx0XHRpZiAoIGFwcC5jb25maWcubG9nZ2luZy5jb25zb2xlID09PSB0cnVlICkgY29uc29sZS5sb2cod2hhdCk7XG5cdFx0fSxcblxuXHRcdGVtcHR5T2JqZWN0OiBmdW5jdGlvbihvYmopIHtcblx0XHQgIHJldHVybiAhT2JqZWN0LmtleXMob2JqKS5sZW5ndGg7XG5cdFx0fSxcblxuXHRcdGNvdW50T2JqZWN0OiBmdW5jdGlvbihvYmopIHtcblx0XHRcdHZhciBjb3VudCA9IDA7XG5cdFx0XHRmb3IoIHZhciBrZXkgaW4gb2JqICkge1xuXHRcdFx0ICBpZihvYmooa2V5KSkge1xuXHRcdFx0ICAgIGNvdW50Kys7XG5cdFx0XHQgIH1cblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGNvdW50O1xuXHRcdH0sXG5cblx0XHR0aHJvdzogZnVuY3Rpb24obnVtKSB7XG5cblx0XHRcdHZhciBjb2RlID0ge1xuXHRcdFx0XHQ0MDAgOiAnNDAwIEJhZCBSZXF1ZXN0Jyxcblx0XHRcdFx0NDAxIDogJzQwMSBVbmF1dGhvcml6ZWQnLFxuXHRcdFx0XHQ0MDMgOiAnNDAzIEZvcmJpZGRlbicsXG5cdFx0XHRcdDQwNCA6ICc0MDQgTm90IEZvdW5kJyxcblx0XHRcdFx0NDA1IDogJzQwNSBNZXRob2QgTm90IEFsbG93ZWQnLFxuXHRcdFx0XHQ1MDAgOiAnNTAwIEludGVybmFsIFNlcnZlciBFcnJvcicsXG5cdFx0XHR9O1xuXG5cdFx0XHR2YXIgZXJyID0gbmV3IEVycm9yKCBjb2RlW251bV0gKTtcblx0XHRcdCAgICBlcnIuY29kZSA9IG51bTtcblx0XHRcdCAgICBlcnIubWVzc2FnZSA9IGNvZGVbbnVtXTtcblx0XHRcdCAgICBlcnIuc3RhdHVzID0gbnVtO1xuXG5cdFx0XHRyZXR1cm4gZXJyO1xuXG5cdFx0fVxuXG5cdH07XG5cbn07XG4iXX0=